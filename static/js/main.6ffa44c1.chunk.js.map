{"version":3,"sources":["components/Title.js","components/Input.js","components/NewSchema.js","components/SchemaBrief.js","components/AllSchemas.js","components/Header.js","components/SideMenu.js","components/Property.js","components/RadioBox.js","components/GetSubSchema.js","components/NewPropertyForm.js","components/SubSchema.js","components/Properties.js","components/Button.js","components/SchemaControl.js","components/Main.js","components/SchemaCode.js","components/CreateEP.js","components/ReadEp.js","components/UpdateEp.js","components/DeleteEp.js","components/Output.js","components/Body.js","App.js","index.js"],"names":["Title","getStyle","fontSize","props","color","fontWeight","borderBottom","padding","display","flexDirection","style","this","flexGrow","text","copyCallback","getCopyButtonStyle","onClick","toCopy","Component","Input","flexWrap","getInputStyle","border","state","isInvalid","width","backgroundColor","getSubmitButtonStyle","margin","handleChange","event","setState","value","target","handleSubmit","preventDefault","schemaNames","includes","submitNow","onSubmit","type","placeholder","onChange","submit","NewSchema","titleColor","createNewSchema","SchemaBrief","cursor","opacity","selected","index","animation","getSchemaNameStyle","selectSchema","schema","name","AllSchemas","height","getAllSchemasContainerStyle","position","getAllSchemasScrollableContainerStyle","top","bottom","left","right","overflow","marginLeft","marginRight","allSchemas","map","i","selectedSchema","key","Header","marginBottom","boxShadow","SideMenu","paddingBottom","getSchemaNamesArray","Property","alignItems","getKeyValueStyle","getControlIconStyle","ControlIcon","className","action","deleteProperty","property","defaultValue","isRequired","toString","isSelected","RadioBox","getTitleStyle","getOptionsStyle","getOptionStyle","id","selectOption","setFormState","title","options","option","stateVar","GetSubSchema","getSelectInputStyle","getSelectStyle","getSelectedStyle","getErrorStyle","getOptionListStyle","showList","zIndex","toggleShowList","subSchema","subSchemaId","addSubSchema","array","error","getOptionsList","subSchemaNames","booleans","NewPropertyForm","getBooleanBoxStyle","getBooleanBoxOptionStyle","default","boolean","resetForm","required","select","string","number","date","buffer","mixed","objectid","decimal128","other","getType","types","getDefaultValue","toLowerCase","allPropertyNames","addNewProperty","handleDefaultValueChange","defaults","handleDefaultBooleanValueChange","opt","getBooleanBox","getDefaultValueForm","e","textAlign","SubSchema","deleteSubSchema","isArray","Properties","getScrollableStyle","properties","p","subSchemas","Button","SchemaControl","justifyContent","deleteSchema","Main","SchemaCode","getPropertyCode","pntab","ptab","getAllPropertiesCodes","allProperties","code","forEach","getAllSubSchemaCodes","tab","getSchemaCode","capitalize","changeInView","copyContent","getContentStyle","wrap","readOnly","CreateEP","getProperty","schemaName","pname","slice","length","getAllProperties","sname","getAllSubSchemas","allSubSchemas","getCreateOneCode","nameLowercase","nameCaptialized","getSubEndpointStyle","getHeaderStyle","getEpNameStyle","getEpDescriptionStyle","ReadEp","getFindAllCode","getFindByIdCode","UpdateEp","getUpdateCode","DeleteEp","getDeleteCode","Output","inView","float","charAt","toUpperCase","elids","elid","document","getElementById","textContent","el","createElement","body","appendChild","execCommand","removeChild","Body","schemaname","push","selecetedSchema","concat","setTimeout","console","log","splice","isMobileDevice","window","innerWidth","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6ffa44c1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Title extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            fontSize: this.props.fontSize || 'large',\r\n            color: this.props.color || 'black',\r\n            fontWeight: 'bold',\r\n            borderBottom: '2px solid #333333',\r\n            padding: '3px',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <div style={{flexGrow: 1}}>{this.props.text}</div>\r\n                {this.props.copyCallback ? <span style={this.props.getCopyButtonStyle()} onClick={()=>{this.props.copyCallback(this.props.toCopy)}}>Copy</span> : ''}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title\r\n","import React, { Component } from 'react'\r\n\r\nexport class Input extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            value: '',\r\n            isInvalid: false\r\n        }\r\n    }\r\n\r\n    getStyle=()=>{\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            flexWrap: 'wrap',\r\n            padding: '15px 5px',\r\n        }\r\n    }\r\n    \r\n    getInputStyle=()=>{\r\n        return {\r\n            padding: '5px',\r\n            border: '0px',\r\n            borderBottom: this.state.isInvalid ? '1px solid crimson' : '1px solid #333333' ,\r\n            // fontWeight: 600,\r\n            width: '100%',\r\n            fontSize: 'large',\r\n            backgroundColor: 'rgba(21,21,21)',\r\n            color: 'white'\r\n        }\r\n    }\r\n\r\n    getSubmitButtonStyle=()=>{\r\n        return {\r\n            color: 'white',\r\n            backgroundColor: '#333333',\r\n            border: '0px',\r\n            padding: '10px',\r\n            fontWeight: 'bold',\r\n            margin: '5px',\r\n        }\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        if(this.state.isInvalid === true) {\r\n            this.setState({\r\n                isInvalid: false\r\n            })\r\n        }\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(this.state.value==='' || this.props.schemaNames.includes(this.state.value)){\r\n            this.setState({\r\n                isInvalid: true\r\n            })\r\n            return;\r\n        }\r\n        this.props.submitNow(this.state.value);\r\n        this.setState({\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form style={this.getStyle()} onSubmit={this.handleSubmit}>\r\n            <input \r\n                style={this.getInputStyle()} \r\n                type={this.props.type} \r\n                placeholder={this.props.placeholder} \r\n                value={this.state.value}\r\n                onChange={this.handleChange} \r\n            />\r\n            <input style={this.getSubmitButtonStyle()} type=\"submit\" value={this.props.submit || 'Submit'} />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from 'react'\r\nimport Title from './Title'\r\nimport Input from './Input'\r\n\r\nexport class NewSchema extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             value: ''\r\n        }\r\n    }\r\n    \r\n    getStyle=()=>{\r\n        return {\r\n            // border: '5px solid black',\r\n            // padding: '10px'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <Title text=\"New Schema\" color={this.props.titleColor}/>\r\n                <Input type=\"text\" placeholder=\"Name\" submitNow={this.props.createNewSchema} submit={'Create'} schemaNames={this.props.schemaNames}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewSchema\r\n","import React, { Component } from 'react'\r\n\r\nexport class SchemaBrief extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            padding: '0px 10px',\r\n            cursor: 'pointer',\r\n            opacity: this.props.selected === this.props.index ? 1 : 0.5,\r\n            backgroundColor: this.props.selected === this.props.index ? '#26ae60' : '',\r\n            animation: 'slideUp 0.2s ease-out both',\r\n        }\r\n    }\r\n\r\n    getSchemaNameStyle = () => {\r\n        return {\r\n            padding: '5px',\r\n            fontWeight: 600,\r\n            color: 'white'\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()} onClick={()=>{this.props.selectSchema(this.props.index)}}>\r\n                <div style={this.getSchemaNameStyle()}>{this.props.schema.name}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SchemaBrief\r\n","import React, { Component } from 'react'\r\nimport Title from './Title'\r\nimport SchemaBrief from './SchemaBrief'\r\n\r\nexport class AllSchemas extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            // border: '5px solid black',\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n        }\r\n    }\r\n\r\n    getAllSchemasContainerStyle = () => {\r\n        return {\r\n            // border: '5px solid crimson',\r\n            position: 'relative',\r\n            height: '100%'\r\n        }\r\n    }\r\n\r\n    getAllSchemasScrollableContainerStyle = () => {\r\n        return {\r\n            // border: '5px solid purple',\r\n            position: 'absolute',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            overflow: 'auto',\r\n            marginLeft: '-10px',\r\n            marginRight: '-10px',\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <Title text={'All Schemas'} color={this.props.titleColor}/>\r\n                <div style={this.getAllSchemasContainerStyle()}>\r\n                    <div style={this.getAllSchemasScrollableContainerStyle()}>\r\n                        {this.props.allSchemas.map((schema, i)=>{\r\n                            return <SchemaBrief selected={this.props.selectedSchema} schema={schema} index={i} key={i} selectSchema={this.props.selectSchema}/>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllSchemas\r\n","import React, { Component } from 'react'\r\n\r\nexport class Header extends Component {\r\n\r\n    getStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            margin: '-10px',\r\n            marginBottom: '10px',\r\n            padding: '10px',\r\n            fontWeight: 'bold',\r\n            // borderBottom: '2px solid #333333',\r\n            boxShadow: '0 1px 3px rgba(0,0,0,1), 0 1px 2px rgba(0,0,0,0.24)',\r\n            color: 'white',\r\n            // backgroundColor: '#333333'\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <span>RESTful API CRUD Endpoints</span>\r\n                <span style={{fontSize: 'x-small'}}>for express</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\nimport NewSchema from './NewSchema'\r\nimport AllSchemas from './AllSchemas'\r\nimport Header from './Header'\r\n\r\nexport class SideMenu extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            // border: '5px solid crimson',\r\n            height: '100%',\r\n            width: '15%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            padding: '10px',\r\n            paddingBottom: '0px',\r\n            backgroundColor: 'rgba(21,21,21)',\r\n            // boxShadow: '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)'\r\n        }\r\n    }\r\n\r\n    getSchemaNamesArray = () => {\r\n        return this.props.allSchemas.map((schema)=>{\r\n            return schema.name;\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <Header />\r\n                <NewSchema createNewSchema={this.props.createNewSchema} schemaNames={this.getSchemaNamesArray()} titleColor={'white'}/>\r\n                <AllSchemas allSchemas={this.props.allSchemas} selectedSchema={this.props.selectedSchema} selectSchema={this.props.selectSchema} titleColor={'white'}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SideMenu\r\n","import React, { Component } from 'react'\r\n\r\nexport class Property extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            border: '5px solid cadeblue',\r\n            padding: '10px',\r\n            borderBottom: '1px solid lightgrey',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            animation: 'slideUp 0.2s ease-out both',\r\n        }\r\n    }\r\n    getKeyValueStyle = () => {\r\n        return {\r\n            fontSize: 'small',\r\n            color: 'grey',\r\n            margin: '2px',\r\n            fontWeight: 'bold'\r\n        }\r\n    }\r\n\r\n    getControlIconStyle = () => {\r\n        return {\r\n            fontSize: '1em',\r\n            border: '1px solid lightgrey',\r\n            padding: '2px',\r\n            margin: '2px',\r\n            cursor: 'pointer',\r\n            color: '#D63031',\r\n        }\r\n    }\r\n\r\n    ControlIcon = (props) => {\r\n        return <i className=\"material-icons\" style={this.getControlIconStyle()} onClick={()=>{props.action(props.index)}} >{props.name}</i>\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <this.ControlIcon name={'delete'} action={this.props.deleteProperty} index={this.props.index}/>\r\n                <span style={{fontSize: 'large',fontWeight: 'bold', margin: '3px'}}>{this.props.property.name}</span>\r\n                <span style={this.getKeyValueStyle()}>type: {this.props.property.type},</span>\r\n                {this.props.property.defaultValue ? <span style={this.getKeyValueStyle()}>defalut: {this.props.property.defaultValue},</span> : ''}\r\n                <span style={this.getKeyValueStyle()}>required: {this.props.property.isRequired.toString()},</span>\r\n                <span style={this.getKeyValueStyle()}>select: {this.props.property.isSelected.toString()}</span>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Property\r\n","import React, { Component } from 'react'\r\n\r\nexport class RadioBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            selected: this.props.selected,\r\n            // isMultSelected: false\r\n        }\r\n    }\r\n    \r\n    \r\n    getStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            margin: '5px'\r\n        }\r\n    }\r\n\r\n    getTitleStyle = () => {\r\n        return {\r\n            fontSize: 'smaller',\r\n            fontWeight: 'bold',\r\n            padding: '2px'\r\n        }\r\n    }\r\n\r\n    getOptionsStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            flexWrap: 'wrap',\r\n        }\r\n    }\r\n    getOptionStyle = (id) => {\r\n        return {\r\n            padding: '5px 15px',\r\n            fontSize: 'small',\r\n            cursor: 'pointer',\r\n            // border: '1px solid rgba(21,21,21)',\r\n            backgroundColor: this.props.selected===id ? '#26ae60' : 'rgba(21,21,21)',\r\n            // color: this.props.selected===id ? 'white' : 'black',\r\n            color: 'white',\r\n        }\r\n    }\r\n\r\n    selectOption = (key,id) => {\r\n        this.props.setFormState(key, id);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}> \r\n                <div style={this.getTitleStyle()}>{this.props.title}</div>\r\n                <div style={this.getOptionsStyle()}>\r\n                    {this.props.options.map((option,i)=>{\r\n                        return <span style={this.getOptionStyle(i)} key={i} onClick={()=>{this.selectOption(this.props.stateVar,i)}}>{option}</span>\r\n                    })}    \r\n                </div>        \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RadioBox\r\n","import React, { Component } from 'react';\r\nimport RadioBox from './RadioBox';\r\nexport class GetSubSchema extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.booleans = ['False', 'True']\r\n        this.state = {\r\n            showList: false,\r\n            subSchema: null,\r\n            subSchemaId: null,\r\n            array: 1,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        }\r\n    }\r\n\r\n    getSelectInputStyle = () => {\r\n        return {\r\n            color: 'white',\r\n            backgroundColor: 'rgb(21,21,21)',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            width: '150px',\r\n        }\r\n    }\r\n\r\n    getSelectStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n        }\r\n    }\r\n    \r\n    getSelectedStyle = () => {\r\n        return {\r\n            color: 'white',\r\n            backgroundColor: '#26ae60',\r\n            fontWeight: 'bold',\r\n            padding: '2px 5px',\r\n            flexGrow: 1,\r\n        }\r\n    }\r\n\r\n    getErrorStyle = () => {\r\n        return{\r\n            color: 'crimson'\r\n        }\r\n    }\r\n\r\n    getOptionListStyle = () =>  {\r\n        return {\r\n            display: this.state.showList ? 'flex': 'none',\r\n            flexDirection: 'column',\r\n            position: 'absolute',\r\n            overflow: 'auto',\r\n            zIndex: 10,\r\n        }\r\n    }\r\n    \r\n    getOptionStyle = () => {\r\n        return {\r\n            padding: '2px 5px', \r\n            backgroundColor: 'rgb(21,21,21)',\r\n            width: '150px',\r\n            borderBottom: '2px solid #333333', \r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n\r\n    toggleShowList = () => {\r\n        const showList = this.state.showList;\r\n        this.setState({\r\n            showList: !showList,\r\n        })\r\n    }\r\n\r\n    selectSchema = (name, id) => {\r\n        this.setState({\r\n            subSchema: name,\r\n            subSchemaId: id\r\n        })\r\n    }\r\n    \r\n    setFormState = (key, value) => {\r\n        this.setState({\r\n            [key]: value\r\n        })\r\n    }\r\n\r\n    addSubSchema = () => {\r\n        if(!this.state.subSchema){\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.props.addSubSchema(this.state.subSchemaId, this.state.array);\r\n\r\n\r\n        this.setState({\r\n            error: false,\r\n            showList: false,\r\n            subSchema: null\r\n        })\r\n    }\r\n\r\n    getOptionsList = () => {\r\n        const allSchemas = this.props.allSchemas;\r\n        const selectedSchema = this.props.schema;\r\n        return allSchemas.map((schema, i)=>{\r\n            if(schema.subSchemaNames.includes(selectedSchema.name) || selectedSchema.name===schema.name || selectedSchema.subSchemaNames.includes(schema.name)) return '';\r\n            return <div style={this.getOptionStyle()} key={i} onClick={()=>{this.selectSchema(schema.name, i)}}>{schema.name}</div>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <div>\r\n                    <div style={{fontSize: 'smaller',fontWeight: 'bold',padding: '2px'}}>Add sub schema</div>\r\n                    <div style={this.getSelectInputStyle()}>\r\n                    <div style={this.getSelectStyle()}>\r\n                        <span style={this.getSelectedStyle()}>{this.state.subSchema ? this.state.subSchema : 'All Schemas'}</span>\r\n                        <span style={{cursor: 'pointer'}} onClick={this.toggleShowList}>\r\n                            <i className=\"material-icons\">{this.state.showList ? 'keyboard_arrow_up' : 'keyboard_arrow_down'}</i>\r\n                            </span>\r\n                        </div>\r\n                        <div style={{position: 'relative'}}>\r\n                            <div style={this.getOptionListStyle()}>\r\n                                {this.getOptionsList()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <RadioBox selected={this.state.array} title={\"Array\"} options={this.booleans} setFormState={this.setFormState} stateVar={'array'} />\r\n                </div>\r\n                <div>\r\n                    <div style={{fontSize: 'smaller',fontWeight: 'bold',padding: '2px'}}>&nbsp;</div>\r\n                    <i style={{fontSize: '35px', cursor: 'pointer'}} onClick={this.addSubSchema} className=\"material-icons\">add_circle</i>\r\n                </div>\r\n                {\r\n                this.state.error ? \r\n                    <div style={this.getErrorStyle()}>\r\n                        <div style={{fontSize: 'smaller',fontWeight: 'bold',padding: '2px'}}>&nbsp;</div>\r\n                        <div>Please select a schema to add.</div>\r\n                    </div>\r\n                    :\r\n                    ''\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GetSubSchema\r\n","import React, { Component } from 'react'\r\nimport RadioBox from './RadioBox';\r\nimport GetSubSchema from './GetSubSchema';\r\n\r\nexport class NewPropertyForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.types= ['String', 'Number', 'Date', 'Buffer','Boolean','Mixed','ObjectId','Decimal128']\r\n        this.booleans = ['False', 'True']\r\n        this.state = {\r\n            value: '',\r\n            isInvalid: false,\r\n            type: 0,\r\n            required: 0,\r\n            select: 1,\r\n            array: 0,\r\n            default: {\r\n                string: '',\r\n                number: '',\r\n                date: '',\r\n                buffer: '',\r\n                boolean: 2,\r\n                mixed: '',\r\n                objectid: '',\r\n                decimal128: '',\r\n                other: ''\r\n            }\r\n        }\r\n    }\r\n    \r\n    getStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            flexWrap: 'wrap',\r\n            alignItems: 'center',\r\n            // borderBottom: '2px solid #333333',\r\n            // padding: '10px'\r\n        }\r\n    }\r\n    \r\n\r\n    getBooleanBoxStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'row'\r\n        }\r\n    }\r\n    getBooleanBoxOptionStyle = (id) => {\r\n        return {\r\n            padding: '5px 15px',\r\n            fontSize: 'small',\r\n            cursor: 'pointer',\r\n            backgroundColor: this.state.default.boolean===id ? '#26ae60' : 'rgba(21,21,21)',\r\n            color: 'white',\r\n        }\r\n    }\r\n\r\n    setFormState = (key, value) => {\r\n        this.setState({\r\n            [key]: value\r\n        })\r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        this.setState({\r\n            value: event.target.value,\r\n            isInvalid: false\r\n        })\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            value: '',\r\n            isInvalid: false,\r\n            type: 0,\r\n            required: 0,\r\n            select: 1,\r\n            array: 0,\r\n            default: {\r\n                string: '',\r\n                number: '',\r\n                date: '',\r\n                buffer: '',\r\n                boolean: 2,\r\n                mixed: '',\r\n                objectid: '',\r\n                decimal128: '',\r\n                other: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    getType = () => {\r\n        if(this.state.array){\r\n            return `[${this.types[this.state.type]}]`\r\n        }\r\n        return this.types[this.state.type]\r\n    }\r\n\r\n    getDefaultValue = () => {\r\n        if(this.types[this.state.type]==='Boolean'){\r\n            if(this.state.default.boolean === 2) return '';\r\n            else return this.state.default.boolean ? 'true' : 'false';\r\n        }else if(this.types[this.state.type]==='String' && this.state.default.string !== ''){\r\n            return `\"${this.state.default[this.types[this.state.type].toLowerCase()]}\"`\r\n        }\r\n        return this.state.default[`${this.types[this.state.type].toLowerCase()}`]\r\n    }\r\n    \r\n    handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n        if(this.state.value==='' || this.props.allPropertyNames.includes(this.state.value)){\r\n            this.setState({\r\n                isInvalid: true\r\n            })\r\n            return;\r\n        }\r\n\r\n        const property = {\r\n            name: this.state.value,\r\n            type: this.getType(),\r\n            isRequired: this.state.required ? 'true' : 'false',\r\n            isSelected: this.state.select ? 'true' : 'false',\r\n            defaultValue: this.getDefaultValue(),\r\n        }\r\n        this.props.addNewProperty(property);\r\n        this.resetForm();\r\n\r\n    }\r\n\r\n\r\n    handleDefaultValueChange = (key, event) => {\r\n        const defaults = this.state.default;\r\n        defaults[key] = event.target.value;\r\n        this.setState({\r\n            default: defaults\r\n        })\r\n    }\r\n    \r\n    handleDefaultBooleanValueChange = (opt) => {\r\n        const defaults = this.state.default;\r\n        defaults.boolean = opt;\r\n        this.setState({\r\n            default: defaults\r\n        })\r\n    }\r\n\r\n    getBooleanBox = () => {\r\n        return <div style={this.getBooleanBoxStyle()}>\r\n            {['False', 'True', 'None'].map((opt, i)=>{\r\n                return <span style={this.getBooleanBoxOptionStyle(i)} key={i} onClick={()=>{this.handleDefaultBooleanValueChange(i)}}>{opt}</span>\r\n            })}\r\n        </div>\r\n    }\r\n\r\n    getDefaultValueForm = () => {\r\n        switch (this.types[this.state.type]) {\r\n            case 'String':\r\n                return <input type='text' placeholder=\"String\" value={this.state.default.string} onChange={(e)=>{this.handleDefaultValueChange('string', e)}} />\r\n            case 'Number': \r\n                return <input type=\"number\" placeholder=\"Number\" value={this.state.default.number} onChange={(e)=>{this.handleDefaultValueChange('number', e)}} />\r\n            case 'Date':\r\n                return <input type=\"text\" placeholder=\"JS Date functions\" value={this.state.default.date} onChange={(e)=>{this.handleDefaultValueChange('date', e)}}/>\r\n            case 'Buffer':\r\n                return <input type='text' placeholder=\"Buffer\" value={this.state.default.buffer} onChange={(e)=>{this.handleDefaultValueChange('buffer', e)}} />\r\n            case 'Boolean':\r\n                return this.getBooleanBox();\r\n            case 'Mixed':\r\n                return <input type='text' placeholder=\"Mixed\" value={this.state.default.mixed} onChange={(e)=>{this.handleDefaultValueChange('mixed', e)}} />\r\n            case 'ObjectId':\r\n                return <input type='text' placeholder=\"ObjectId\" value={this.state.default.objectid} onChange={(e)=>{this.handleDefaultValueChange('objectid', e)}} />\r\n            case 'Decimal128':\r\n                return <input type='number' placeholder=\"Decimal128\" value={this.state.default.decimal128} onChange={(e)=>{this.handleDefaultValueChange('decimal128', e)}} />\r\n            \r\n            default:\r\n                return <input type='text' placeholder=\"Any\" value={this.state.default.other} onChange={(e)=>{this.handleDefaultValueChange('other', e)}} />\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{padding: '10px', borderBottom: '2px solid #333333'}}>\r\n            <form onSubmit={this.handleSubmit} style={this.getStyle()}>\r\n                <div style={{width: '100%'}}>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Property Name' \r\n                    onChange={this.handleChange} \r\n                    value={this.state.value}\r\n                    style={this.state.isInvalid ? {borderBottom: '1px solid crimson', fontSize: 'large'} : {borderBottom: '1px solid #333333', fontSize: 'large'}} \r\n                />\r\n                </div>\r\n                <RadioBox selected={this.state.array} title={\"Array\"} options={this.booleans} setFormState={this.setFormState} stateVar={'array'} />\r\n                <RadioBox selected={this.state.type} title={\"Type\"} options={this.types} setFormState={this.setFormState} stateVar={'type'} />\r\n                \r\n                <div style={{marginRight: '5px'}}>\r\n                    <div style={{fontSize: 'smaller',fontWeight: 'bold',padding: '2px'}}>Default</div>\r\n                    {this.getDefaultValueForm(this.props.type)}\r\n                </div>\r\n\r\n                <RadioBox selected={this.state.required} title={\"Required\"} options={this.booleans} setFormState={this.setFormState} stateVar={'required'} />\r\n                <RadioBox selected={this.state.select} title={\"Select\"} options={this.booleans} setFormState={this.setFormState} stateVar={'select'} />\r\n                \r\n                <div style={{width: '100%', textAlign: 'right'}}>\r\n                    <input type=\"reset\" value=\"Reset\" onClick={this.resetForm}/>\r\n                    <input type=\"submit\" value=\"Add\" />\r\n                </div>\r\n            </form>\r\n            <GetSubSchema allSchemas={this.props.allSchemas} addSubSchema={this.props.addSubSchema} schema={this.props.schema} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewPropertyForm\r\n","import React, { Component } from 'react'\r\n\r\nexport class SubSchema extends Component {\r\n\r\n    getStyle = () => {\r\n        return {\r\n            border: '5px solid cadeblue',\r\n            padding: '10px',\r\n            borderBottom: '1px solid lightgrey',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            animation: 'slideUp 0.2s ease-out both',\r\n        }\r\n    }\r\n    getKeyValueStyle = () => {\r\n        return {\r\n            fontSize: 'small',\r\n            color: 'grey',\r\n            margin: '2px',\r\n            fontWeight: 'bold'\r\n        }\r\n    }\r\n\r\n    getControlIconStyle = () => {\r\n        return {\r\n            fontSize: '1em',\r\n            border: '1px solid lightgrey',\r\n            padding: '2px',\r\n            margin: '2px',\r\n            cursor: 'pointer',\r\n            color: '#D63031',\r\n        }\r\n    }\r\n\r\n    ControlIcon = (props) => {\r\n        return <i className=\"material-icons\" style={this.getControlIconStyle()} onClick={()=>{props.action(props.index)}} >{props.name}</i>\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <this.ControlIcon name={'delete'} action={this.props.deleteSubSchema} index={this.props.index}/>\r\n                <span style={{fontSize: 'large',fontWeight: 'bold', margin: '3px'}}>{this.props.subSchema.name}</span>\r\n                <span style={this.getKeyValueStyle()}>type: {this.props.subSchema.isArray ? \"[Sub Schema]\" : \"Sub Schema\"},</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubSchema\r\n","import React, { Component } from 'react'\r\nimport Property from './Property'\r\nimport NewPropertyForm from './NewPropertyForm'\r\nimport SubSchema from './SubSchema';\r\n\r\nexport class Properties extends Component {\r\n\r\n    getStyle = () => {\r\n        return {\r\n            // border: '5px solid cadetblue',\r\n            flexGrow: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n        }\r\n    }\r\n    getScrollableStyle = () => {\r\n        return {\r\n            // border: '5px solid purple',\r\n            position: 'absolute',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            overflow: 'auto',\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <NewPropertyForm addNewProperty={this.props.addNewProperty} allSchemas={this.props.allSchemas} allPropertyNames={this.props.schema.properties.map((p)=>{return p.name})} addSubSchema={this.props.addSubSchema} schema={this.props.schema}/>\r\n                <div style={{position: 'relative', flexGrow: 1}}>\r\n                <div style={this.getScrollableStyle()}>\r\n                    \r\n                    {this.props.schema.properties.map((property, i)=>{\r\n                        return <Property property={property} key={i} index={i} deleteProperty={this.props.deleteProperty} />\r\n                    })}\r\n                    {this.props.schema.subSchemas.map((subSchema, i)=>{\r\n                        return <SubSchema subSchema={subSchema} key={i} index={i} deleteSubSchema={this.props.deleteSubSchema} />\r\n                    })}\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Properties\r\n","import React, { Component } from 'react'\r\n\r\nexport class Button extends Component {\r\n    getStyle=()=>{\r\n        return {\r\n            padding: '5px 15px',\r\n            backgroundColor: '#D63031',\r\n            color: 'white',\r\n            margin: '3px',\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <span style={this.getStyle()} onClick={this.props.onClick}>{this.props.text}</span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button\r\n","import React, { Component } from 'react'\r\nimport Button from './Button'\r\n\r\nexport class SchemaControl extends Component {\r\n\r\n    getStyle = () => {\r\n        return {\r\n            // border: '5px solid crimson',\r\n            display: 'flex',\r\n            padding: '3px',\r\n            flexDirection: 'row',\r\n            justifyContent: 'flex-end',\r\n            alignItems: 'center',\r\n            \r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <Button text=\"Delete\" onClick={this.props.deleteSchema}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SchemaControl\r\n","import React, { Component } from 'react'\r\nimport Title from './Title'\r\nimport Properties from './Properties'\r\nimport SchemaControl from './SchemaControl'\r\n\r\nexport class Main extends Component {    \r\n    getStyle = () => {\r\n        return {\r\n            // border: '5px solid cadetblue',\r\n            height: '100%',\r\n            width: '50%',\r\n            padding: '10px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            paddingBottom: '0px',\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n\r\n                <Title text={this.props.schema ? this.props.schema.name : 'Select or Create Schema'}/>\r\n                \r\n                {this.props.schema ? <Properties schema={this.props.schema} allSchemas={this.props.allSchemas} addSubSchema={this.props.addSubSchema} addNewProperty={this.props.addNewProperty} deleteProperty={this.props.deleteProperty} deleteSubSchema={this.props.deleteSubSchema}/> : ''}\r\n                {this.props.schema ? <SchemaControl deleteSchema={this.props.deleteSchema} /> : ''}\r\n                \r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main\r\n","import React, { Component } from 'react';\r\nimport Title from './Title';\r\n\r\nexport class SchemaCode extends Component {\r\n\r\n    getPropertyCode = (p, pntab) =>{\r\n\r\n        let ptab = pntab + '\\t';\r\n\r\n        const opening = `${pntab}${p.name}: {\\n`\r\n        const type = `${ptab}type: ${p.type},\\n`;\r\n        const required = `${ptab}required: ${p.isRequired},\\n`;\r\n        const select = `${ptab}select: ${p.isSelected},\\n`\r\n        const defaultValue = p.defaultValue ? `${ptab}default: ${p.defaultValue},\\n` : ``;\r\n        const closing = `${pntab}},\\n`\r\n        const code = opening+type+required+select+defaultValue+closing;\r\n\r\n        return code;\r\n    }\r\n\r\n    getAllPropertiesCodes = (properties, ptab) => {\r\n        ptab+='\\t';\r\n        const allProperties = properties.map((property)=>{\r\n            return this.getPropertyCode(property, ptab);\r\n        })\r\n        let code='';\r\n        allProperties.forEach(property=>{\r\n            code += property\r\n        })\r\n        return `${code}`\r\n    }\r\n\r\n    getAllSubSchemaCodes = (subSchemas, tab) => {\r\n        tab+='\\t';\r\n        let code='';\r\n\r\n        subSchemas.forEach((subSchema, i)=>{\r\n            code+=`${tab}${subSchema.name}: ${subSchema.isArray ? '[{\\n' : '{\\n'}`;\r\n            code+=this.getAllPropertiesCodes(subSchema.properties, tab);\r\n            code+=this.getAllSubSchemaCodes(subSchema.subSchemas, tab);\r\n            code+=`${subSchema.isArray ? `${tab}}],\\n` : `${tab}},\\n`}`;\r\n        });\r\n\r\n        return `${code}`;\r\n    }\r\n\r\n    getSchemaCode = ()=>{\r\n        return (\r\n`const mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\\n\r\nconst ${this.props.schema.name}Schema = new Schema({\r\n${this.getAllPropertiesCodes(this.props.schema.properties, '\\t')}\r\n${this.getAllSubSchemaCodes(this.props.schema.subSchemas, '\\t')}\r\n});\\n\r\n\r\nmodule.exports = mongoose.model('${this.props.capitalize(this.props.schema.name)}', ${this.props.schema.name}Schema);\\n\r\n`\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={()=>{this.props.changeInView(0)}} >\r\n                <Title text={'Schema Code'} getCopyButtonStyle={this.props.getCopyButtonStyle} toCopy={['schema']} copyCallback={this.props.copyContent} />\r\n                <div style={this.props.getContentStyle(0)} >\r\n                    <textarea wrap=\"off\" readOnly='readonly' value={this.getSchemaCode()} id='schema'>\r\n                    </textarea>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SchemaCode\r\n","import React, { Component } from 'react';\r\nimport Title from './Title';\r\n\r\n\r\n\r\nexport class CreateEP extends Component {\r\n\r\n    getProperty = (property, schemaName) => {\r\n        const name = property.name;\r\n        const type = property.type;\r\n        const required = property.isRequired==='true' ? 'Required.' : 'Not Required';\r\n        const select = property.isSelected==='true' ? 'Selected' : 'Not Selected';\r\n        const defaultValue = property.defaultValue ? `default=${property.defaultValue}.` : '';\r\n        let pname = schemaName.toLowerCase()+'.'+name;\r\n        pname = pname.slice(this.props.schema.name.length+1);\r\n\r\n        return `\\t\\t\\t${pname}: req.body.${schemaName.toLowerCase()}.${name}, //${type}. ${defaultValue} ${required}. ${select}.\\n`\r\n    }\r\n\r\n    getAllProperties = (allProperties, schemaName) => {\r\n        let sname = `${schemaName}`\r\n        const properties = allProperties.map((property, i)=>{\r\n            return this.getProperty(property, sname);\r\n        });\r\n        let code = '';\r\n        properties.forEach((property)=>{\r\n            code += property;\r\n        })\r\n        return code\r\n    }\r\n\r\n    getAllSubSchemas = (allSubSchemas, schemaName) => {\r\n        let code = '';\r\n\r\n        allSubSchemas.forEach((subSchema, i)=>{\r\n            code+=this.getAllProperties(subSchema.properties, `${schemaName}.${subSchema.name}`);\r\n            code+=this.getAllSubSchemas(subSchema.subSchemas, `${schemaName}.${subSchema.name}`);\r\n        })\r\n\r\n\r\n        return `${code}`;\r\n    }\r\n\r\n    getCreateOneCode = ()=>{\r\n        const nameLowercase = this.props.schema.name.toLowerCase();\r\n        const nameCaptialized = this.props.capitalize(this.props.schema.name);\r\n        return (\r\n`// Create Endpoint\r\napp.post('/api/v1/${nameLowercase}/new', (req, res)=>{\r\n\r\n    if(!req.body.${nameLowercase}){\r\n        res.status(400).json({\r\n            resolved: \"failure\",\r\n            message: 'req.body.${nameLowercase} can not be empty',\r\n        });\r\n        return;\r\n    }\r\n        \r\n    const ${nameLowercase} = new ${nameCaptialized}({\r\n\r\n${this.getAllProperties(this.props.schema.properties, this.props.schema.name)}\r\n${this.getAllSubSchemas(this.props.schema.subSchemas, this.props.schema.name)}\r\n    });\r\n\r\n    ${nameLowercase}.save()\r\n    .then((${nameLowercase})=>{\r\n        res.status(201).json({\r\n            resolved: \"success\",\r\n            data: {\r\n                ${nameLowercase}: ${nameLowercase},\r\n            }\r\n        });\r\n    })\r\n    .catch((err)=>{\r\n        res.status(409).json({\r\n            resolved: \"failure\",\r\n            message: \"Maybe because data already exists.\",\r\n            error: err\r\n        });\r\n    });\r\n});\\n\r\n`\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.props.style} onClick={()=>{this.props.changeInView(1)}}>\r\n                <Title text={'Create Endpoint'} getCopyButtonStyle={this.props.getCopyButtonStyle} toCopy={['createone']} copyCallback={this.props.copyContent}/>\r\n                <div style={this.props.getContentStyle(1)}>\r\n                    <div style={this.props.getSubEndpointStyle()}>\r\n                        <div style={this.props.getHeaderStyle()}>\r\n                            <div style={this.props.getEpNameStyle()}>Create One</div>\r\n                            <div style={this.props.getEpDescriptionStyle()}></div>\r\n                            <span style={this.props.getCopyButtonStyle()} onClick={()=>{this.props.copyContent(['createone'])}}>Copy</span>\r\n                        </div>\r\n                        <textarea wrap=\"off\" readOnly='readonly' value={this.getCreateOneCode()} id='createone'></textarea>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateEP\r\n","import React, { Component } from 'react'\r\nimport Title from './Title'\r\n\r\nexport class ReadEp extends Component {\r\n\r\n    getFindAllCode = ()=>{\r\n        const nameLowercase = this.props.schema.name.toLowerCase();\r\n        const nameCaptialized = this.props.capitalize(this.props.schema.name);\r\n        return (\r\n`// Find All Endpoint.\r\napp.get('/api/v1/${nameLowercase}s', (req, res)=>{\r\n\r\n    ${nameCaptialized}.find()   //Returns an array.\r\n    .then((${nameLowercase}s)=>{\r\n        res.status(200).json({\r\n            resolved: \"success\",\r\n            data: {\r\n                ${nameLowercase}s: ${nameLowercase}s,\r\n            },\r\n        });\r\n    })\r\n    .catch((err)=>{\r\n        res.stats(500).json({\r\n            resolved: \"failure\",\r\n            message: \"Some error occurred while retrieving ${nameCaptialized}s.\",\r\n            error: err,\r\n        });\r\n    });\r\n});\\n\r\n`\r\n        )\r\n    }\r\n\r\n    getFindByIdCode = ()=>{\r\n        const nameLowercase = this.props.schema.name.toLowerCase();\r\n        const nameCaptialized = this.props.capitalize(this.props.schema.name);\r\n        return (\r\n`// Find By Id Endpoint.\r\napp.get('/api/v1/${nameLowercase}/:${nameLowercase}Id', (req, res)=>{\r\n\r\n    ${nameCaptialized}.findById(req.params.${nameLowercase}Id)  //Returns single document.\r\n    .then((${nameLowercase})=>{\r\n        if(!${nameLowercase}){\r\n            res.status(404).json({\r\n                resolved: \"success\",\r\n                message: \"${nameCaptialized} not found with id \" + req.params.${nameLowercase}Id,\r\n            });\r\n            return;\r\n        }\r\n        res.status(200).json({\r\n            resolved: \"success\",\r\n            data: {\r\n                ${nameLowercase}: ${nameLowercase},\r\n            }\r\n        })\r\n    })\r\n    .catch((err)=>{\r\n        if(err.kind === 'ObjectId') {\r\n            res.status(404).json({\r\n                resolved: \"failure\",\r\n                message: \"${nameCaptialized} not found with id \" + req.params.${nameLowercase}Id,\r\n                error: err,\r\n            })\r\n            return;\r\n        }\r\n        res.status(500).json({\r\n            resolved: \"failure\",\r\n            message: \"Error retreiving ${nameLowercase} with id \" + req.params.${nameLowercase}Id,\r\n            error: err, \r\n        });\r\n    });\r\n});\\n\r\n`\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.props.style} onClick={()=>{this.props.changeInView(2)}}>\r\n                <Title text={'Read Endpoint'} getCopyButtonStyle={this.props.getCopyButtonStyle} toCopy={['findall', 'findbyid']} copyCallback={this.props.copyContent}/>\r\n                <div style={this.props.getContentStyle(2)}  >\r\n                    <div style={this.props.getSubEndpointStyle()}>\r\n                        <div style={this.props.getHeaderStyle()}>\r\n                            <div style={this.props.getEpNameStyle()}>Find All</div>\r\n                            <div style={this.props.getEpDescriptionStyle()}></div>\r\n                            <span style={this.props.getCopyButtonStyle()} onClick={()=>{this.props.copyContent(['findall'])}}>Copy</span>\r\n                        </div>\r\n                        <textarea wrap=\"off\" readOnly='readonly' value={this.getFindAllCode()} id='findall'></textarea>\r\n                    </div>\r\n                    <div style={this.props.getSubEndpointStyle()}>\r\n                        <div style={this.props.getHeaderStyle()}>\r\n                            <div style={this.props.getEpNameStyle()}>Find By Id</div>\r\n                            <div style={this.props.getEpDescriptionStyle()}></div>\r\n                            <span style={this.props.getCopyButtonStyle()} onClick={()=>{this.props.copyContent(['findbyid'])}}>Copy</span>\r\n                        </div>\r\n                        <textarea wrap=\"off\" readOnly='readonly' value={this.getFindByIdCode()} id='findbyid'></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReadEp\r\n","import React, { Component } from 'react'\r\nimport Title from './Title'\r\n\r\nexport class UpdateEp extends Component {\r\n\r\n\r\n    getProperty = (property, schemaName) => {\r\n        const name = property.name;\r\n        const type = property.type;\r\n        const required = property.isRequired==='true' ? 'Required.' : 'Not Required';\r\n        const select = property.isSelected==='true' ? 'Selected' : 'Not Selected';\r\n        const defaultValue = property.defaultValue ? `default=${property.defaultValue}.` : '';\r\n        let pname = schemaName.toLowerCase()+'.'+name;\r\n        pname = pname.slice(this.props.schema.name.length+1);\r\n\r\n        return `\\t\\t\\t${pname}: req.body.${schemaName.toLowerCase()}.${name}, //${type}. ${defaultValue} ${required}. ${select}.\\n`\r\n    }\r\n\r\n    getAllProperties = (allProperties, schemaName) => {\r\n        let sname = `${schemaName}`\r\n        const properties = allProperties.map((property, i)=>{\r\n            return this.getProperty(property, sname);\r\n        });\r\n        let code = '';\r\n        properties.forEach((property)=>{\r\n            code += property;\r\n        })\r\n        return code\r\n    }\r\n\r\n    getAllSubSchemas = (allSubSchemas, schemaName) => {\r\n        let code = '';\r\n\r\n        allSubSchemas.forEach((subSchema, i)=>{\r\n            code+=this.getAllProperties(subSchema.properties, `${schemaName}.${subSchema.name}`);\r\n            code+=this.getAllSubSchemas(subSchema.subSchemas, `${schemaName}.${subSchema.name}`);\r\n        });\r\n        return `${code}`;\r\n    }\r\n\r\n\r\n    getUpdateCode = ()=>{\r\n        const nameLowercase = this.props.schema.name.toLowerCase();\r\n        const nameCaptialized = this.props.capitalize(this.props.schema.name);\r\n        return (\r\n`// Update Endpoint.\r\napp.put('/api/v1/${nameLowercase}/:${nameLowercase}Id', (req, res)=>{\r\n\r\n    if(!req.body.${nameLowercase}){\r\n        res.status(400).json({\r\n            resolved: \"failure\",\r\n            message: \"req.body.${nameLowercase} can not be empty.\",\r\n        })\r\n    }\r\n\r\n    ${nameCaptialized}.findByIdAndUpdate(req.params.${nameLowercase}Id, {\r\n\r\n${this.getAllProperties(this.props.schema.properties, this.props.schema.name)}\r\n${this.getAllSubSchemas(this.props.schema.subSchemas, this.props.schema.name)}\r\n    }, {new: true})  //Returns the updated document.\r\n    .then((${nameLowercase})=>{\r\n        if(!${nameLowercase}){\r\n            res.status(404).json({\r\n                resolved: \"success\",\r\n                message: \"${nameCaptialized} not found with id \" + req.params.${nameLowercase}Id,\r\n            });\r\n            return;\r\n        }\r\n        res.status(200).json({\r\n            resolved: \"success\",\r\n            data: {\r\n                ${nameLowercase}: ${nameLowercase},\r\n            }\r\n        })\r\n    })\r\n    .catch((err)=>{\r\n        if(err.kind === 'ObjectId') {\r\n            res.status(404).json({\r\n                resolved: \"failure\",\r\n                message: \"${nameCaptialized} not found with id \" + req.params.${nameLowercase}Id,\r\n                error: err,\r\n            })\r\n            return;\r\n        }\r\n        res.status(500).json({\r\n            resolved: \"failure\",\r\n            message: \"Error updating ${nameLowercase} with id \" + req.params.${nameLowercase}Id,\r\n            error: err, \r\n        });\r\n    });\r\n});\\n\r\n`\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.props.style} onClick={()=>{this.props.changeInView(3)}}>\r\n                <Title text={'Update Endpoint'} getCopyButtonStyle={this.props.getCopyButtonStyle} toCopy={['update']} copyCallback={this.props.copyContent} />\r\n                <div style={this.props.getContentStyle(3)} >\r\n                    <div style={this.props.getSubEndpointStyle()}>\r\n                        <div style={this.props.getHeaderStyle()}>\r\n                            <div style={this.props.getEpNameStyle()}>Update</div>\r\n                            <div style={this.props.getEpDescriptionStyle()}></div>\r\n                            <span style={this.props.getCopyButtonStyle()} onClick={()=>{this.props.copyContent(['update'])}}>Copy</span>\r\n                        </div>\r\n                        <textarea wrap=\"off\" readOnly='readonly' value={this.getUpdateCode()} id='update'></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateEp\r\n","import React, { Component } from 'react'\r\nimport Title from './Title'\r\n\r\nexport class DeleteEp extends Component {\r\n\r\n    getDeleteCode = ()=>{\r\n        const nameLowercase = this.props.schema.name.toLowerCase();\r\n        const nameCaptialized = this.props.capitalize(this.props.schema.name);\r\n        return (\r\n`// Delete Endpoint.\r\napp.delete('/api/v1/${nameLowercase}/:${nameLowercase}Id', (req, res)=>{\r\n\r\n    ${nameCaptialized}.findByIdAndRemove(req.params.${nameLowercase}Id)  //Returns the updated document.\r\n    .then((${nameLowercase})=>{\r\n        if(!${nameLowercase}){\r\n            res.status(404).json({\r\n                resolved: \"success\",\r\n                message: \"${nameCaptialized} not found with id \" + req.params.${nameLowercase}Id,\r\n            });\r\n            return;\r\n        }\r\n        res.status(200).json({\r\n            resolved: \"success\",\r\n            message: \"${nameCaptialized} deleted successfully!\",\r\n            data: {\r\n                ${nameLowercase}: ${nameLowercase},\r\n            }\r\n        })\r\n    })\r\n    .catch((err)=>{\r\n        if(err.kind === 'ObjectId' || err.name === 'NotFound') {\r\n            res.status(404).json({\r\n                resolved: \"failure\",\r\n                message: \"${nameCaptialized} not found with id \" + req.params.${nameLowercase}Id,\r\n                error: err,\r\n            })\r\n            return;\r\n        }\r\n        res.status(500).json({\r\n            resolved: \"failure\",\r\n            message: \"Error deleting ${nameLowercase} with id \" + req.params.${nameLowercase}Id,\r\n            error: err, \r\n        });\r\n    });\r\n});\\n\r\n`\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.props.style} onClick={()=>{this.props.changeInView(4)}}>\r\n                <Title text={'Delete Endpoint'} getCopyButtonStyle={this.props.getCopyButtonStyle}  toCopy={['delete']} copyCallback={this.props.copyContent} />\r\n                <div style={this.props.getContentStyle(4)} >\r\n                    <div style={this.props.getSubEndpointStyle()}>\r\n                        <div style={this.props.getHeaderStyle()}>\r\n                            <div style={this.props.getEpNameStyle()}>Delete</div>\r\n                            <div style={this.props.getEpDescriptionStyle()}></div>\r\n                            <span style={this.props.getCopyButtonStyle()} onClick={()=>{this.props.copyContent(['delete'])}}>Copy</span>\r\n                        </div>\r\n                        <textarea wrap=\"off\" readOnly='readonly' value={this.getDeleteCode()} id='delete'></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeleteEp\r\n","import React, { Component } from 'react'\r\nimport SchemaCode from './SchemaCode'\r\nimport CreateEP from './CreateEP'\r\nimport ReadEp from './ReadEp'\r\nimport UpdateEp from './UpdateEp'\r\nimport DeleteEp from './DeleteEp'\r\nimport Title from './Title'\r\n\r\nexport class Output extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            inView: 0\r\n        }\r\n    }\r\n    \r\n    changeInView = (inView)=>{\r\n        this.setState({\r\n            inView\r\n        })\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            // border: '5px solid crimson',\r\n            height: '100%',\r\n            width: '35%',\r\n            position: 'relative',\r\n            // backgroundColor: '#2b3032',\r\n        }\r\n    }\r\n\r\n    getScrollableStyle = () => {\r\n        return {\r\n            // border: '5px solid purple',\r\n            position: 'absolute',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            overflow: 'auto',\r\n            padding: '10px',\r\n        }\r\n    }\r\n\r\n    getContentStyle = (index) => {\r\n        return {\r\n            padding: '5px',\r\n            display: this.state.inView===index ? 'block' : 'none',\r\n        }\r\n    }\r\n\r\n    getSubEndpointStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n        }\r\n    }\r\n\r\n    getHeaderStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            padding: '3px',\r\n        }\r\n    }\r\n\r\n    getEpNameStyle = () => {\r\n        return {\r\n            fontSize: '',\r\n            fontWeight: 600,\r\n        }\r\n    }\r\n\r\n    getEpDescriptionStyle = () => {\r\n        return {\r\n            fontSize: 'small',\r\n            fontWeight: 'bold',\r\n            color: 'lightgrey',\r\n            flexGrow: 1\r\n        }\r\n    }\r\n\r\n    getCopyButtonStyle = () => {\r\n        return {\r\n            backgroundColor: 'rgb(21,21,21)',\r\n            color: 'white',\r\n            fontSize: 'small',\r\n            padding: '5px',\r\n            cursor: 'pointer',\r\n            float: 'right'\r\n        }\r\n    }\r\n\r\n    capitalize = (string)=>{\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    copyContent = (elids) => {\r\n        let code='';\r\n        elids.forEach((elid,i)=>{\r\n            code += document.getElementById(elid).textContent; \r\n        });\r\n        const el = document.createElement('textarea');\r\n        el.value = code;\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.schema ? \r\n            <div style={this.getStyle()}>\r\n                <div style={this.getScrollableStyle()}>\r\n                    <SchemaCode \r\n                        schema={this.props.schema}  \r\n                        getContentStyle={this.getContentStyle} \r\n                        getSubEndpointStyle={this.getSubEndpointStyle} \r\n                        getHeaderStyle={this.getHeaderStyle}\r\n                        getEpNameStyle={this.getEpNameStyle}\r\n                        getEpDescriptionStyle={this.getEpDescriptionStyle}\r\n                        getCopyButtonStyle={this.getCopyButtonStyle}\r\n                        capitalize={this.capitalize}\r\n                        copyContent={this.copyContent}\r\n                        changeInView={this.changeInView}\r\n                        />\r\n                    <div>\r\n                    <Title text={'Endpoints'} fontSize={'x-large'} \r\n                        getCopyButtonStyle={this.getCopyButtonStyle} toCopy={['createone', 'findall', 'findbyid', 'update', 'delete']} copyCallback={this.copyContent}/>\r\n                    <CreateEP \r\n                        schema={this.props.schema}  \r\n                        getContentStyle={this.getContentStyle} \r\n                        getSubEndpointStyle={this.getSubEndpointStyle} \r\n                        getHeaderStyle={this.getHeaderStyle}\r\n                        getEpNameStyle={this.getEpNameStyle}\r\n                        getEpDescriptionStyle={this.getEpDescriptionStyle}\r\n                        getCopyButtonStyle={this.getCopyButtonStyle}\r\n                        capitalize={this.capitalize}\r\n                        copyContent={this.copyContent}\r\n                        changeInView={this.changeInView}\r\n                        copyCallback={this.copyContent} \r\n                        />\r\n                    <ReadEp \r\n                        schema={this.props.schema}  \r\n                        getContentStyle={this.getContentStyle} \r\n                        getSubEndpointStyle={this.getSubEndpointStyle} \r\n                        getHeaderStyle={this.getHeaderStyle}\r\n                        getEpNameStyle={this.getEpNameStyle}\r\n                        getEpDescriptionStyle={this.getEpDescriptionStyle}\r\n                        getCopyButtonStyle={this.getCopyButtonStyle}\r\n                        capitalize={this.capitalize}\r\n                        copyContent={this.copyContent}\r\n                        changeInView={this.changeInView}\r\n                        copyCallback={this.copyContent} \r\n                        />\r\n                    <UpdateEp \r\n                        schema={this.props.schema}  \r\n                        getContentStyle={this.getContentStyle} \r\n                        getSubEndpointStyle={this.getSubEndpointStyle} \r\n                        getHeaderStyle={this.getHeaderStyle}\r\n                        getEpNameStyle={this.getEpNameStyle}\r\n                        getEpDescriptionStyle={this.getEpDescriptionStyle}\r\n                        getCopyButtonStyle={this.getCopyButtonStyle}\r\n                        capitalize={this.capitalize}\r\n                        copyContent={this.copyContent}\r\n                        changeInView={this.changeInView}\r\n                        copyCallback={this.copyContent} \r\n                        />\r\n                    <DeleteEp \r\n                        schema={this.props.schema}  \r\n                        getContentStyle={this.getContentStyle} \r\n                        getSubEndpointStyle={this.getSubEndpointStyle} \r\n                        getHeaderStyle={this.getHeaderStyle}\r\n                        getEpNameStyle={this.getEpNameStyle}\r\n                        getEpDescriptionStyle={this.getEpDescriptionStyle}\r\n                        getCopyButtonStyle={this.getCopyButtonStyle}\r\n                        capitalize={this.capitalize}\r\n                        copyContent={this.copyContent}\r\n                        changeInView={this.changeInView}\r\n                        copyCallback={this.copyContent} \r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            :\r\n\r\n            ''\r\n        )\r\n    }\r\n}\r\n\r\nexport default Output\r\n","import React, { Component } from 'react'\r\nimport SideMenu from './SideMenu'\r\nimport Main from './Main'\r\nimport Output from './Output'\r\n\r\nexport class Body extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            selecetedSchema: 0,\r\n            allSchemas: [\r\n                {\r\n                    name: 'user',\r\n                    properties: [],\r\n                    subSchemas: [],\r\n                    subSchemaNames: [],\r\n                }\r\n            ],\r\n            isMobileDevice: window.innerWidth < 400,\r\n        }\r\n    }\r\n    \r\n    getStyle = () => {\r\n        return {\r\n            flexGrow: 1,\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n        }\r\n    }\r\n\r\n    createNewSchema = (schemaname) => {\r\n        const allSchemas = this.state.allSchemas;\r\n        allSchemas.push({name: schemaname, properties: [], subSchemas: [], subSchemaNames: []});\r\n        this.setState({\r\n            allSchemas: allSchemas,\r\n            selecetedSchema: allSchemas.length-1\r\n        });\r\n    }\r\n\r\n\r\n    addSubSchema = (id, isArray) => {\r\n        const subSchema = this.state.allSchemas[id];\r\n        const allSchemas = this.state.allSchemas;\r\n        const schema = allSchemas[this.state.selecetedSchema];\r\n        schema.subSchemaNames.push(subSchema.name);\r\n        schema.subSchemas.push({\r\n            name: subSchema.name,\r\n            properties: subSchema.properties,\r\n            subSchemas: subSchema.subSchemas,\r\n            subSchemaNames: schema.subSchemaNames.concat(subSchema.subSchemaNames),\r\n            isArray: isArray\r\n        });\r\n\r\n        allSchemas[this.state.selecetedSchema] = schema;\r\n        this.setState({\r\n            allSchemas\r\n        });\r\n        setTimeout(()=>{console.log(this.state.allSchemas)},2000);\r\n        \r\n\r\n    }\r\n\r\n    selectSchema = (id) => {\r\n        // console.log(\"Selected Schema: \", this.state.allSchemas[id]);\r\n        this.setState({\r\n            selecetedSchema: id\r\n        })\r\n    }\r\n\r\n    deleteSchema = () => {\r\n        const allSchemas = this.state.allSchemas;\r\n        allSchemas.splice(this.state.selecetedSchema, 1);\r\n        this.setState({\r\n            selecetedSchema: this.state.selecetedSchema-1,\r\n            allSchemas\r\n        })\r\n    }\r\n\r\n\r\n\r\n    addNewProperty = (property) => {\r\n        const allSchemas = this.state.allSchemas;\r\n        allSchemas[this.state.selecetedSchema].properties.push(property);\r\n        this.setState({\r\n            allSchemas\r\n        })\r\n    }\r\n\r\n    deleteProperty = (index) => {\r\n        const allSchemas = this.state.allSchemas;\r\n        allSchemas[this.state.selecetedSchema].properties.splice(index, 1);\r\n        this.setState({\r\n            allSchemas\r\n        })\r\n    }\r\n\r\n    deleteSubSchema = (index) => {\r\n        const allSchemas = this.state.allSchemas;\r\n        allSchemas[this.state.selecetedSchema].subSchemas.splice(index, 1);\r\n        this.setState({\r\n            allSchemas\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <SideMenu isMobileDevice={this.state.isMobileDevice} allSchemas={this.state.allSchemas} selectedSchema={this.state.selecetedSchema} selectSchema={this.selectSchema} createNewSchema={this.createNewSchema}/>\r\n                <Main isMobileDevice={this.state.isMobileDevice} schema={this.state.allSchemas[this.state.selecetedSchema]} deleteSchema={this.deleteSchema} addNewProperty={this.addNewProperty} deleteProperty={this.deleteProperty} deleteSubSchema={this.deleteSubSchema} allSchemas={this.state.allSchemas} addSubSchema={this.addSubSchema} />\r\n                <Output isMobileDevice={this.state.isMobileDevice} schema={this.state.allSchemas[this.state.selecetedSchema]} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Body\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Body from './components/Body';\n\nexport class App extends Component {\n  getStyle = () => {\n    return {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n    }\n  }\n  render() {\n    return (\n      <div style={this.getStyle()}>\n        <Body />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}