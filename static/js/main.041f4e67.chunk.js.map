{"version":3,"sources":["components/Title.js","components/Input.js","components/NewSchema.js","components/SchemaBrief.js","components/AllSchemas.js","components/Header.js","components/SideMenu.js","components/Property.js","components/RadioBox.js","components/NewPropertyForm.js","components/Properties.js","components/Button.js","components/SchemaControl.js","components/Main.js","components/SchemaCode.js","components/CreateEP.js","components/ReadEp.js","components/UpdateEp.js","components/DeleteEp.js","components/Output.js","components/Body.js","App.js","index.js"],"names":["Title","getStyle","fontSize","props","color","fontWeight","borderBottom","padding","display","flexDirection","style","this","flexGrow","text","copyCallback","getCopyButtonStyle","onClick","toCopy","Component","Input","flexWrap","getInputStyle","border","state","isInvalid","width","backgroundColor","getSubmitButtonStyle","margin","handleChange","event","setState","value","target","handleSubmit","preventDefault","schemaNames","includes","submitNow","onSubmit","type","placeholder","onChange","submit","NewSchema","titleColor","createNewSchema","SchemaBrief","cursor","opacity","selected","index","getSchemaNameStyle","selectSchema","schema","name","AllSchemas","height","getAllSchemasContainerStyle","position","getAllSchemasScrollableContainerStyle","top","bottom","left","right","overflow","marginLeft","marginRight","allSchemas","map","i","selectedSchema","key","Header","marginBottom","boxShadow","SideMenu","paddingBottom","getSchemaNamesArray","Property","alignItems","getKeyValueStyle","getControlIconStyle","ControlIcon","className","action","deleteProperty","property","defaultValue","isRequired","toString","isSelected","RadioBox","getTitleStyle","getOptionsStyle","getOptionStyle","id","selectOption","setFormState","title","options","option","stateVar","NewPropertyForm","getBooleanBoxStyle","getBooleanBoxOptionStyle","default","boolean","resetForm","required","select","array","string","number","date","buffer","mixed","objectid","decimal128","other","getType","types","getDefaultValue","toLowerCase","allPropertyNames","addNewProperty","handleDefaultValueChange","defaults","handleDefaultBooleanValueChange","opt","getBooleanBox","getDefaultValueForm","e","booleans","textAlign","Properties","getScrollableStyle","properties","p","Button","SchemaControl","justifyContent","deleteSchema","Main","SchemaCode","getPropertyCode","getAllPropertiesCodes","allProperties","code","forEach","getSchemaCode","capitalize","changeInView","copyContent","getContentStyle","wrap","readOnly","CreateEP","getProperty","schemaName","getAllProperties","getCreateOneCode","nameLowercase","nameCaptialized","getSubEndpointStyle","getHeaderStyle","getEpNameStyle","getEpDescriptionStyle","ReadEp","getFindAllCode","getFindByIdCode","UpdateEp","getUpdateCode","DeleteEp","getDeleteCode","Output","inView","float","charAt","toUpperCase","slice","elids","elid","document","getElementById","textContent","el","createElement","body","appendChild","execCommand","removeChild","Body","schemaname","push","selecetedSchema","length","splice","isMobile","window","innerWidth","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.041f4e67.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Title extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            fontSize: this.props.fontSize || 'large',\r\n            color: this.props.color || 'black',\r\n            fontWeight: 'bold',\r\n            borderBottom: '2px solid #333333',\r\n            padding: '3px',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <div style={{flexGrow: 1}}>{this.props.text}</div>\r\n                {this.props.copyCallback ? <span style={this.props.getCopyButtonStyle()} onClick={()=>{this.props.copyCallback(this.props.toCopy)}}>Copy</span> : ''}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title\r\n","import React, { Component } from 'react'\r\n\r\nexport class Input extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            value: '',\r\n            isInvalid: false\r\n        }\r\n    }\r\n\r\n    getStyle=()=>{\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            flexWrap: 'wrap',\r\n            padding: '15px 5px',\r\n        }\r\n    }\r\n    \r\n    getInputStyle=()=>{\r\n        return {\r\n            padding: '5px',\r\n            border: '0px',\r\n            borderBottom: this.state.isInvalid ? '1px solid crimson' : '1px solid #333333' ,\r\n            // fontWeight: 600,\r\n            width: '100%',\r\n            fontSize: 'large',\r\n            backgroundColor: 'rgba(21,21,21)',\r\n            color: 'white'\r\n        }\r\n    }\r\n\r\n    getSubmitButtonStyle=()=>{\r\n        return {\r\n            color: 'white',\r\n            backgroundColor: '#333333',\r\n            border: '0px',\r\n            padding: '10px',\r\n            fontWeight: 'bold',\r\n            margin: '5px',\r\n        }\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        if(this.state.isInvalid === true) {\r\n            this.setState({\r\n                isInvalid: false\r\n            })\r\n        }\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(this.state.value==='' || this.props.schemaNames.includes(this.state.value)){\r\n            this.setState({\r\n                isInvalid: true\r\n            })\r\n            return;\r\n        }\r\n        this.props.submitNow(this.state.value);\r\n        this.setState({\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form style={this.getStyle()} onSubmit={this.handleSubmit}>\r\n            <input \r\n                style={this.getInputStyle()} \r\n                type={this.props.type} \r\n                placeholder={this.props.placeholder} \r\n                value={this.state.value}\r\n                onChange={this.handleChange} \r\n            />\r\n            <input style={this.getSubmitButtonStyle()} type=\"submit\" value={this.props.submit || 'Submit'} />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from 'react'\r\nimport Title from './Title'\r\nimport Input from './Input'\r\n\r\nexport class NewSchema extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             value: ''\r\n        }\r\n    }\r\n    \r\n    getStyle=()=>{\r\n        return {\r\n            // border: '5px solid black',\r\n            // padding: '10px'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <Title text=\"New Schema\" color={this.props.titleColor}/>\r\n                <Input type=\"text\" placeholder=\"Name\" submitNow={this.props.createNewSchema} submit={'Create'} schemaNames={this.props.schemaNames}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewSchema\r\n","import React, { Component } from 'react'\r\n\r\nexport class SchemaBrief extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            padding: '0px 10px',\r\n            cursor: 'pointer',\r\n            opacity: this.props.selected === this.props.index ? 1 : 0.5,\r\n            backgroundColor: this.props.selected === this.props.index ? '#26ae60' : ''\r\n        }\r\n    }\r\n\r\n    getSchemaNameStyle = () => {\r\n        return {\r\n            // borderBottom: '1px solid lightgrey',\r\n            padding: '5px',\r\n            fontWeight: 600,\r\n            color: 'white'\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()} onClick={()=>{this.props.selectSchema(this.props.index)}}>\r\n                <div style={this.getSchemaNameStyle()}>{this.props.schema.name}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SchemaBrief\r\n","import React, { Component } from 'react'\r\nimport Title from './Title'\r\nimport SchemaBrief from './SchemaBrief'\r\n\r\nexport class AllSchemas extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            // border: '5px solid black',\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n        }\r\n    }\r\n\r\n    getAllSchemasContainerStyle = () => {\r\n        return {\r\n            // border: '5px solid crimson',\r\n            position: 'relative',\r\n            height: '100%'\r\n        }\r\n    }\r\n\r\n    getAllSchemasScrollableContainerStyle = () => {\r\n        return {\r\n            // border: '5px solid purple',\r\n            position: 'absolute',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            overflow: 'auto',\r\n            marginLeft: '-10px',\r\n            marginRight: '-10px',\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <Title text={'All Schemas'} color={this.props.titleColor}/>\r\n                <div style={this.getAllSchemasContainerStyle()}>\r\n                    <div style={this.getAllSchemasScrollableContainerStyle()}>\r\n                        {this.props.allSchemas.map((schema, i)=>{\r\n                            return <SchemaBrief selected={this.props.selectedSchema} schema={schema} index={i} key={i} selectSchema={this.props.selectSchema}/>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllSchemas\r\n","import React, { Component } from 'react'\r\n\r\nexport class Header extends Component {\r\n\r\n    getStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            margin: '-10px',\r\n            marginBottom: '10px',\r\n            padding: '10px',\r\n            fontWeight: 'bold',\r\n            // borderBottom: '2px solid #333333',\r\n            boxShadow: '0 1px 3px rgba(0,0,0,1), 0 1px 2px rgba(0,0,0,0.24)',\r\n            color: 'white',\r\n            // backgroundColor: '#333333'\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <span>RESTful API CRUD Endpoints</span>\r\n                <span style={{fontSize: 'x-small'}}>for express</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\nimport NewSchema from './NewSchema'\r\nimport AllSchemas from './AllSchemas'\r\nimport Header from './Header'\r\n\r\nexport class SideMenu extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            // border: '5px solid crimson',\r\n            height: '100%',\r\n            width: '15%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            padding: '10px',\r\n            paddingBottom: '0px',\r\n            backgroundColor: 'rgba(21,21,21)',\r\n            // boxShadow: '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)'\r\n        }\r\n    }\r\n\r\n    getSchemaNamesArray = () => {\r\n        return this.props.allSchemas.map((schema)=>{\r\n            return schema.name;\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <Header />\r\n                <NewSchema createNewSchema={this.props.createNewSchema} schemaNames={this.getSchemaNamesArray()} titleColor={'white'}/>\r\n                <AllSchemas allSchemas={this.props.allSchemas} selectedSchema={this.props.selectedSchema} selectSchema={this.props.selectSchema} titleColor={'white'}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SideMenu\r\n","import React, { Component } from 'react'\r\n\r\nexport class Property extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            border: '5px solid cadeblue',\r\n            padding: '10px',\r\n            borderBottom: '1px solid lightgrey',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'center'\r\n        }\r\n    }\r\n    getKeyValueStyle = () => {\r\n        return {\r\n            fontSize: 'small',\r\n            color: 'grey',\r\n            margin: '2px',\r\n            fontWeight: 'bold'\r\n        }\r\n    }\r\n\r\n    getControlIconStyle = () => {\r\n        return {\r\n            fontSize: '1em',\r\n            border: '1px solid lightgrey',\r\n            padding: '2px',\r\n            margin: '2px',\r\n            cursor: 'pointer',\r\n            color: '#D63031'\r\n        }\r\n    }\r\n\r\n    ControlIcon = (props) => {\r\n        return <i className=\"material-icons\" style={this.getControlIconStyle()} onClick={()=>{props.action(props.index)}} >{props.name}</i>\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <this.ControlIcon name={'delete'} action={this.props.deleteProperty} index={this.props.index}/>\r\n                <span style={{fontSize: 'large',fontWeight: 'bold', margin: '3px'}}>{this.props.property.name}</span>\r\n                <span style={this.getKeyValueStyle()}>type: {this.props.property.type},</span>\r\n                {this.props.property.defaultValue ? <span style={this.getKeyValueStyle()}>defalut: {this.props.property.defaultValue},</span> : ''}\r\n                <span style={this.getKeyValueStyle()}>required: {this.props.property.isRequired.toString()},</span>\r\n                <span style={this.getKeyValueStyle()}>select: {this.props.property.isSelected.toString()}</span>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Property\r\n","import React, { Component } from 'react'\r\n\r\nexport class RadioBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            selected: this.props.selected,\r\n            // isMultSelected: false\r\n        }\r\n    }\r\n    \r\n    \r\n    getStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            margin: '5px'\r\n        }\r\n    }\r\n\r\n    getTitleStyle = () => {\r\n        return {\r\n            fontSize: 'smaller',\r\n            fontWeight: 'bold',\r\n            padding: '2px'\r\n        }\r\n    }\r\n\r\n    getOptionsStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            flexWrap: 'wrap',\r\n        }\r\n    }\r\n    getOptionStyle = (id) => {\r\n        return {\r\n            padding: '5px 15px',\r\n            fontSize: 'small',\r\n            cursor: 'pointer',\r\n            // border: '1px solid rgba(21,21,21)',\r\n            backgroundColor: this.props.selected===id ? '#26ae60' : 'rgba(21,21,21)',\r\n            // color: this.props.selected===id ? 'white' : 'black',\r\n            color: 'white',\r\n        }\r\n    }\r\n\r\n    selectOption = (key,id) => {\r\n        this.props.setFormState(key, id);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}> \r\n                <div style={this.getTitleStyle()}>{this.props.title}</div>\r\n                <div style={this.getOptionsStyle()}>\r\n                    {this.props.options.map((option,i)=>{\r\n                        return <span style={this.getOptionStyle(i)} key={i} onClick={()=>{this.selectOption(this.props.stateVar,i)}}>{option}</span>\r\n                    })}    \r\n                </div>        \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RadioBox\r\n","import React, { Component } from 'react'\r\nimport RadioBox from './RadioBox';\r\n\r\nexport class NewPropertyForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.types= ['String', 'Number', 'Date', 'Buffer','Boolean','Mixed','ObjectId','Decimal128']\r\n        this.booleans = ['False', 'True']\r\n        this.state = {\r\n            value: '',\r\n            isInvalid: false,\r\n            type: 0,\r\n            required: 0,\r\n            select: 1,\r\n            array: 0,\r\n            default: {\r\n                string: '',\r\n                number: '',\r\n                date: '',\r\n                buffer: '',\r\n                boolean: 2,\r\n                mixed: '',\r\n                objectid: '',\r\n                decimal128: '',\r\n                other: ''\r\n            }\r\n        }\r\n    }\r\n    \r\n    getStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            flexWrap: 'wrap',\r\n            alignItems: 'center',\r\n            borderBottom: '2px solid #333333',\r\n            padding: '10px'\r\n        }\r\n    }\r\n    \r\n\r\n    getBooleanBoxStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'row'\r\n        }\r\n    }\r\n    getBooleanBoxOptionStyle = (id) => {\r\n        return {\r\n            padding: '5px 15px',\r\n            fontSize: 'small',\r\n            cursor: 'pointer',\r\n            backgroundColor: this.state.default.boolean===id ? '#26ae60' : 'rgba(21,21,21)',\r\n            color: 'white',\r\n        }\r\n    }\r\n\r\n    setFormState = (key, value) => {\r\n        this.setState({\r\n            [key]: value\r\n        })\r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        this.setState({\r\n            value: event.target.value,\r\n            isInvalid: false\r\n        })\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            value: '',\r\n            isInvalid: false,\r\n            type: 0,\r\n            required: 0,\r\n            select: 1,\r\n            array: 0,\r\n            default: {\r\n                string: '',\r\n                number: '',\r\n                date: '',\r\n                buffer: '',\r\n                boolean: 2,\r\n                mixed: '',\r\n                objectid: '',\r\n                decimal128: '',\r\n                other: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    getType = () => {\r\n        if(this.state.array){\r\n            return `[${this.types[this.state.type]}]`\r\n        }\r\n        return this.types[this.state.type]\r\n    }\r\n\r\n    getDefaultValue = () => {\r\n        if(this.types[this.state.type]==='Boolean'){\r\n            if(this.state.default.boolean === 2) return '';\r\n            else return this.state.default.boolean ? 'true' : 'false';\r\n        }else if(this.types[this.state.type]==='String' && this.state.default.string !== ''){\r\n            return `\"${this.state.default[this.types[this.state.type].toLowerCase()]}\"`\r\n        }\r\n        return this.state.default[`${this.types[this.state.type].toLowerCase()}`]\r\n    }\r\n    \r\n    handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n        if(this.state.value==='' || this.props.allPropertyNames.includes(this.state.value)){\r\n            this.setState({\r\n                isInvalid: true\r\n            })\r\n            return;\r\n        }\r\n\r\n        const property = {\r\n            name: this.state.value,\r\n            type: this.getType(),\r\n            isRequired: this.state.required ? 'true' : 'false',\r\n            isSelected: this.state.select ? 'true' : 'false',\r\n            defaultValue: this.getDefaultValue(),\r\n        }\r\n        this.props.addNewProperty(property);\r\n        this.resetForm();\r\n\r\n    }\r\n\r\n\r\n    handleDefaultValueChange = (key, event) => {\r\n        const defaults = this.state.default;\r\n        defaults[key] = event.target.value;\r\n        this.setState({\r\n            default: defaults\r\n        })\r\n    }\r\n    \r\n    handleDefaultBooleanValueChange = (opt) => {\r\n        const defaults = this.state.default;\r\n        defaults.boolean = opt;\r\n        this.setState({\r\n            default: defaults\r\n        })\r\n    }\r\n\r\n    getBooleanBox = () => {\r\n        return <div style={this.getBooleanBoxStyle()}>\r\n            {['False', 'True', 'None'].map((opt, i)=>{\r\n                return <span style={this.getBooleanBoxOptionStyle(i)} key={i} onClick={()=>{this.handleDefaultBooleanValueChange(i)}}>{opt}</span>\r\n            })}\r\n        </div>\r\n    }\r\n\r\n    getDefaultValueForm = () => {\r\n        switch (this.types[this.state.type]) {\r\n            case 'String':\r\n                return <input type='text' placeholder=\"String\" value={this.state.default.string} onChange={(e)=>{this.handleDefaultValueChange('string', e)}} />\r\n            case 'Number': \r\n                return <input type=\"number\" placeholder=\"Number\" value={this.state.default.number} onChange={(e)=>{this.handleDefaultValueChange('number', e)}} />\r\n            case 'Date':\r\n                return <input type=\"text\" placeholder=\"JS Date functions\" value={this.state.default.date} onChange={(e)=>{this.handleDefaultValueChange('date', e)}}/>\r\n            case 'Buffer':\r\n                return <input type='text' placeholder=\"Buffer\" value={this.state.default.buffer} onChange={(e)=>{this.handleDefaultValueChange('buffer', e)}} />\r\n            case 'Boolean':\r\n                return this.getBooleanBox();\r\n            case 'Mixed':\r\n                return <input type='text' placeholder=\"Mixed\" value={this.state.default.mixed} onChange={(e)=>{this.handleDefaultValueChange('mixed', e)}} />\r\n            case 'ObjectId':\r\n                return <input type='text' placeholder=\"ObjectId\" value={this.state.default.objectid} onChange={(e)=>{this.handleDefaultValueChange('objectid', e)}} />\r\n            case 'Decimal128':\r\n                return <input type='number' placeholder=\"Decimal128\" value={this.state.default.decimal128} onChange={(e)=>{this.handleDefaultValueChange('decimal128', e)}} />\r\n            \r\n            default:\r\n                return <input type='text' placeholder=\"Any\" value={this.state.default.other} onChange={(e)=>{this.handleDefaultValueChange('other', e)}} />\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} style={this.getStyle()}>\r\n                <div style={{width: '100%'}}>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Property Name' \r\n                    onChange={this.handleChange} \r\n                    value={this.state.value}\r\n                    style={this.state.isInvalid ? {borderBottom: '1px solid crimson', fontSize: 'large'} : {borderBottom: '1px solid #333333', fontSize: 'large'}} \r\n                />\r\n                </div>\r\n                <RadioBox selected={this.state.array} title={\"Array\"} options={this.booleans} setFormState={this.setFormState} stateVar={'array'} />\r\n                <RadioBox selected={this.state.type} title={\"Type\"} options={this.types} setFormState={this.setFormState} stateVar={'type'} />\r\n                \r\n                <div style={{marginRight: '5px'}}>\r\n                    <div style={{fontSize: 'smaller',fontWeight: 'bold',padding: '2px'}}>Default</div>\r\n                    {this.getDefaultValueForm(this.props.type)}\r\n                </div>\r\n\r\n                <RadioBox selected={this.state.required} title={\"Required\"} options={this.booleans} setFormState={this.setFormState} stateVar={'required'} />\r\n                <RadioBox selected={this.state.select} title={\"Select\"} options={this.booleans} setFormState={this.setFormState} stateVar={'select'} />\r\n                \r\n                <div style={{width: '100%', textAlign: 'right'}}>\r\n                    <input type=\"reset\" value=\"Reset\" onClick={this.resetForm}/>\r\n                    <input type=\"submit\" value=\"Add\" />\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewPropertyForm\r\n","import React, { Component } from 'react'\r\nimport Property from './Property'\r\nimport NewPropertyForm from './NewPropertyForm'\r\n\r\nexport class Properties extends Component {\r\n\r\n    getStyle = () => {\r\n        return {\r\n            // border: '5px solid cadetblue',\r\n            flexGrow: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n        }\r\n    }\r\n    getScrollableStyle = () => {\r\n        return {\r\n            // border: '5px solid purple',\r\n            position: 'absolute',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            overflow: 'auto',\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <NewPropertyForm addNewProperty={this.props.addNewProperty} allPropertyNames={this.props.schema.properties.map((p)=>{return p.name})}/>\r\n                <div style={{position: 'relative', flexGrow: 1}}>\r\n                <div style={this.getScrollableStyle()}>\r\n                    \r\n                    {this.props.schema.properties.map((property, i)=>{\r\n                        return <Property property={property} key={i} index={i} deleteProperty={this.props.deleteProperty} />\r\n                    })}\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Properties\r\n","import React, { Component } from 'react'\r\n\r\nexport class Button extends Component {\r\n    getStyle=()=>{\r\n        return {\r\n            padding: '5px 15px',\r\n            backgroundColor: '#D63031',\r\n            color: 'white',\r\n            margin: '3px',\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <span style={this.getStyle()} onClick={this.props.onClick}>{this.props.text}</span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button\r\n","import React, { Component } from 'react'\r\nimport Button from './Button'\r\n\r\nexport class SchemaControl extends Component {\r\n\r\n    getStyle = () => {\r\n        return {\r\n            // border: '5px solid crimson',\r\n            display: 'flex',\r\n            padding: '3px',\r\n            flexDirection: 'row',\r\n            justifyContent: 'flex-end',\r\n            alignItems: 'center',\r\n            \r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <Button text=\"Delete\" onClick={this.props.deleteSchema}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SchemaControl\r\n","import React, { Component } from 'react'\r\nimport Title from './Title'\r\nimport Properties from './Properties'\r\nimport SchemaControl from './SchemaControl'\r\n\r\nexport class Main extends Component {    \r\n    getStyle = () => {\r\n        return {\r\n            // border: '5px solid cadetblue',\r\n            height: '100%',\r\n            width: '50%',\r\n            padding: '10px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            paddingBottom: '0px',\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n\r\n                <Title text={this.props.schema ? this.props.schema.name : 'Select or Create Schema'}/>\r\n                \r\n                {this.props.schema ? <Properties schema={this.props.schema}  addNewProperty={this.props.addNewProperty} deleteProperty={this.props.deleteProperty}/> : ''}\r\n                {this.props.schema ? <SchemaControl deleteSchema={this.props.deleteSchema} /> : ''}\r\n                \r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main\r\n","import React, { Component } from 'react';\r\nimport Title from './Title';\r\n\r\nexport class SchemaCode extends Component {\r\n\r\n    getPropertyCode = (p) =>{\r\n        const opening = `\\t${p.name}: {\\n`\r\n        const type = `\\t\\ttype: ${p.type},\\n`;\r\n        const required = `\\t\\trequired: ${p.isRequired},\\n`;\r\n        const select = `\\t\\tselect: ${p.isSelected},\\n`\r\n        const defaultValue = p.defaultValue ? `\\t\\tdefault: ${p.defaultValue},\\n` : ``;\r\n        const closing = `\\t},\\n`\r\n        const code = opening+type+required+select+defaultValue+closing;\r\n\r\n        return code;\r\n    }\r\n\r\n    getAllPropertiesCodes = () => {\r\n        const allProperties = this.props.schema.properties.map((property)=>{\r\n            return this.getPropertyCode(property);\r\n        })\r\n        let code='';\r\n        allProperties.forEach(property=>{\r\n            code += property\r\n        })\r\n        return `${code}`\r\n    }\r\n\r\n    getSchemaCode = ()=>{\r\n        return (\r\n`const mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\\n\r\nconst ${this.props.schema.name}Schema = new Schema({\r\n${this.getAllPropertiesCodes()}});\\n\r\nmodule.exports = mongoose.model('${this.props.capitalize(this.props.schema.name)}', ${this.props.schema.name}Schema);\\n\r\n`\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={()=>{this.props.changeInView(0)}} >\r\n                <Title text={'Schema Code'} getCopyButtonStyle={this.props.getCopyButtonStyle} toCopy={['schema']} copyCallback={this.props.copyContent} />\r\n                <div style={this.props.getContentStyle(0)} >\r\n                    <textarea wrap=\"off\" readOnly='readonly' value={this.getSchemaCode()} id='schema'>\r\n                    </textarea>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SchemaCode\r\n","import React, { Component } from 'react';\r\nimport Title from './Title';\r\n\r\n\r\n\r\nexport class CreateEP extends Component {\r\n\r\n    getProperty = (property, schemaName) => {\r\n        const name = property.name;\r\n        const type = property.type;\r\n        const required = property.isRequired==='true' ? 'Required.' : 'Not Required';\r\n        const select = property.isSelected==='true' ? 'Selected' : 'Not Selected';\r\n        const defaultValue = property.defaultValue ? `default=${property.defaultValue}.` : '';\r\n\r\n        return `\\t\\t\\t${name}: req.body.${schemaName.toLowerCase()}.${name}, //${type}. ${defaultValue} ${required}. ${select}.\\n`\r\n    }\r\n\r\n    getAllProperties = () => {\r\n        const properties = this.props.schema.properties.map((property, i)=>{\r\n            return this.getProperty(property, this.props.schema.name);\r\n        });\r\n        let code = '';\r\n        properties.forEach((property)=>{\r\n            code += property;\r\n        })\r\n        return code\r\n    }\r\n\r\n    getCreateOneCode = ()=>{\r\n        const nameLowercase = this.props.schema.name.toLowerCase();\r\n        const nameCaptialized = this.props.capitalize(this.props.schema.name);\r\n        return (\r\n`// Create Endpoint\r\napp.post('/api/v1/${nameLowercase}/new', (req, res)=>{\r\n\r\n    if(!req.body.${nameLowercase}){\r\n        res.status(400).json({\r\n            resolved: \"failure\",\r\n            message: 'req.body.${nameLowercase} can not be empty',\r\n        });\r\n        return;\r\n    }\r\n        \r\n    const ${nameLowercase} = new ${nameCaptialized}({\r\n${this.getAllProperties()}\r\n    });\r\n\r\n    ${nameLowercase}.save()\r\n    .then((${nameLowercase})=>{\r\n        res.status(201).json({\r\n            resolved: \"success\",\r\n            data: {\r\n                ${nameLowercase}: ${nameLowercase},\r\n            }\r\n        });\r\n    })\r\n    .catch((err)=>{\r\n        res.status(409).json({\r\n            resolved: \"failure\",\r\n            message: \"Maybe because data already exists.\",\r\n            error: err\r\n        });\r\n    });\r\n});\\n\r\n`\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.props.style} onClick={()=>{this.props.changeInView(1)}}>\r\n                <Title text={'Create Endpoint'} getCopyButtonStyle={this.props.getCopyButtonStyle} toCopy={['createone']} copyCallback={this.props.copyContent}/>\r\n                <div style={this.props.getContentStyle(1)}>\r\n                    <div style={this.props.getSubEndpointStyle()}>\r\n                        <div style={this.props.getHeaderStyle()}>\r\n                            <div style={this.props.getEpNameStyle()}>Create One</div>\r\n                            <div style={this.props.getEpDescriptionStyle()}></div>\r\n                            <span style={this.props.getCopyButtonStyle()} onClick={()=>{this.props.copyContent(['createone'])}}>Copy</span>\r\n                        </div>\r\n                        <textarea wrap=\"off\" readOnly='readonly' value={this.getCreateOneCode()} id='createone'></textarea>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateEP\r\n","import React, { Component } from 'react'\r\nimport Title from './Title'\r\n\r\nexport class ReadEp extends Component {\r\n\r\n    getFindAllCode = ()=>{\r\n        const nameLowercase = this.props.schema.name.toLowerCase();\r\n        const nameCaptialized = this.props.capitalize(this.props.schema.name);\r\n        return (\r\n`// Find All Endpoint.\r\napp.get('/api/v1/${nameLowercase}s', (req, res)=>{\r\n\r\n    ${nameCaptialized}.find()   //Returns an array.\r\n    .then((${nameLowercase}s)=>{\r\n        res.status(200).json({\r\n            resolved: \"success\",\r\n            data: {\r\n                ${nameLowercase}s: ${nameLowercase}s,\r\n            },\r\n        });\r\n    })\r\n    .catch((err)=>{\r\n        res.stats(500).json({\r\n            resolved: \"failure\",\r\n            message: \"Some error occurred while retrieving ${nameCaptialized}s.\",\r\n            error: err,\r\n        });\r\n    });\r\n});\\n\r\n`\r\n        )\r\n    }\r\n\r\n    getFindByIdCode = ()=>{\r\n        const nameLowercase = this.props.schema.name.toLowerCase();\r\n        const nameCaptialized = this.props.capitalize(this.props.schema.name);\r\n        return (\r\n`// Find By Id Endpoint.\r\napp.get('/api/v1/${nameLowercase}/:${nameLowercase}Id', (req, res)=>{\r\n\r\n    ${nameCaptialized}.findById(req.params.${nameLowercase}Id)  //Returns single document.\r\n    .then((${nameLowercase})=>{\r\n        if(!${nameLowercase}){\r\n            res.status(404).json({\r\n                resolved: \"success\",\r\n                message: \"${nameCaptialized} not found with id \" + req.params.${nameLowercase}Id,\r\n            });\r\n            return;\r\n        }\r\n        res.status(200).json({\r\n            resolved: \"success\",\r\n            data: {\r\n                ${nameLowercase}: ${nameLowercase},\r\n            }\r\n        })\r\n    })\r\n    .catch((err)=>{\r\n        if(err.kind === 'ObjectId') {\r\n            res.status(404).json({\r\n                resolved: \"failure\",\r\n                message: \"${nameCaptialized} not found with id \" + req.params.${nameLowercase}Id,\r\n                error: err,\r\n            })\r\n            return;\r\n        }\r\n        res.status(500).json({\r\n            resolved: \"failure\",\r\n            message: \"Error retreiving ${nameLowercase} with id \" + req.params.${nameLowercase}Id,\r\n            error: err, \r\n        });\r\n    });\r\n});\\n\r\n`\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.props.style} onClick={()=>{this.props.changeInView(2)}}>\r\n                <Title text={'Read Endpoint'} getCopyButtonStyle={this.props.getCopyButtonStyle} toCopy={['findall', 'findbyid']} copyCallback={this.props.copyContent}/>\r\n                <div style={this.props.getContentStyle(2)}  >\r\n                    <div style={this.props.getSubEndpointStyle()}>\r\n                        <div style={this.props.getHeaderStyle()}>\r\n                            <div style={this.props.getEpNameStyle()}>Find All</div>\r\n                            <div style={this.props.getEpDescriptionStyle()}></div>\r\n                            <span style={this.props.getCopyButtonStyle()} onClick={()=>{this.props.copyContent(['findall'])}}>Copy</span>\r\n                        </div>\r\n                        <textarea wrap=\"off\" readOnly='readonly' value={this.getFindAllCode()} id='findall'></textarea>\r\n                    </div>\r\n                    <div style={this.props.getSubEndpointStyle()}>\r\n                        <div style={this.props.getHeaderStyle()}>\r\n                            <div style={this.props.getEpNameStyle()}>Find By Id</div>\r\n                            <div style={this.props.getEpDescriptionStyle()}></div>\r\n                            <span style={this.props.getCopyButtonStyle()} onClick={()=>{this.props.copyContent(['findbyid'])}}>Copy</span>\r\n                        </div>\r\n                        <textarea wrap=\"off\" readOnly='readonly' value={this.getFindByIdCode()} id='findbyid'></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReadEp\r\n","import React, { Component } from 'react'\r\nimport Title from './Title'\r\n\r\nexport class UpdateEp extends Component {\r\n\r\n\r\n    getProperty = (property, schemaName) => {\r\n        const name = property.name;\r\n        const type = property.type;\r\n        const required = property.isRequired==='true' ? 'Required.' : 'Not Required';\r\n        const select = property.isSelected==='true' ? 'Selected' : 'Not Selected';\r\n        const defaultValue = property.defaultValue ? `default=${property.defaultValue}.` : '';\r\n\r\n        return `\\t\\t\\t${name}: req.body.${schemaName.toLowerCase()}.${name}, //${type}. ${defaultValue} ${required}. ${select}.\\n`\r\n    }\r\n\r\n    getAllProperties = () => {\r\n        const properties = this.props.schema.properties.map((property, i)=>{\r\n            return this.getProperty(property, this.props.schema.name);\r\n        });\r\n        let code = '';\r\n        properties.forEach((property)=>{\r\n            code += property;\r\n        })\r\n        return code\r\n    }\r\n\r\n    getUpdateCode = ()=>{\r\n        const nameLowercase = this.props.schema.name.toLowerCase();\r\n        const nameCaptialized = this.props.capitalize(this.props.schema.name);\r\n        return (\r\n`// Update Endpoint.\r\napp.put('/api/v1/${nameLowercase}/:${nameLowercase}Id', (req, res)=>{\r\n\r\n    if(!req.body.${nameLowercase}){\r\n        res.status(400).json({\r\n            resolved: \"failure\",\r\n            message: \"req.body.${nameLowercase} can not be empty.\",\r\n        })\r\n    }\r\n\r\n    ${nameCaptialized}.findByIdAndUpdate(req.params.${nameLowercase}Id, {\r\n${this.getAllProperties()}\r\n    }, {new: true})  //Returns the updated document.\r\n    .then((${nameLowercase})=>{\r\n        if(!${nameLowercase}){\r\n            res.status(404).json({\r\n                resolved: \"success\",\r\n                message: \"${nameCaptialized} not found with id \" + req.params.${nameLowercase}Id,\r\n            });\r\n            return;\r\n        }\r\n        res.status(200).json({\r\n            resolved: \"success\",\r\n            data: {\r\n                ${nameLowercase}: ${nameLowercase},\r\n            }\r\n        })\r\n    })\r\n    .catch((err)=>{\r\n        if(err.kind === 'ObjectId') {\r\n            res.status(404).json({\r\n                resolved: \"failure\",\r\n                message: \"${nameCaptialized} not found with id \" + req.params.${nameLowercase}Id,\r\n                error: err,\r\n            })\r\n            return;\r\n        }\r\n        res.status(500).json({\r\n            resolved: \"failure\",\r\n            message: \"Error updating ${nameLowercase} with id \" + req.params.${nameLowercase}Id,\r\n            error: err, \r\n        });\r\n    });\r\n});\\n\r\n`\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.props.style} onClick={()=>{this.props.changeInView(3)}}>\r\n                <Title text={'Update Endpoint'} getCopyButtonStyle={this.props.getCopyButtonStyle} toCopy={['update']} copyCallback={this.props.copyContent} />\r\n                <div style={this.props.getContentStyle(3)} >\r\n                    <div style={this.props.getSubEndpointStyle()}>\r\n                        <div style={this.props.getHeaderStyle()}>\r\n                            <div style={this.props.getEpNameStyle()}>Update</div>\r\n                            <div style={this.props.getEpDescriptionStyle()}></div>\r\n                            <span style={this.props.getCopyButtonStyle()} onClick={()=>{this.props.copyContent(['update'])}}>Copy</span>\r\n                        </div>\r\n                        <textarea wrap=\"off\" readOnly='readonly' value={this.getUpdateCode()} id='update'></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateEp\r\n","import React, { Component } from 'react'\r\nimport Title from './Title'\r\n\r\nexport class DeleteEp extends Component {\r\n\r\n    getDeleteCode = ()=>{\r\n        const nameLowercase = this.props.schema.name.toLowerCase();\r\n        const nameCaptialized = this.props.capitalize(this.props.schema.name);\r\n        return (\r\n`// Delete Endpoint.\r\napp.delete('/api/v1/${nameLowercase}/:${nameLowercase}Id', (req, res)=>{\r\n\r\n    ${nameCaptialized}.findByIdAndRemove(req.params.${nameLowercase}Id)  //Returns the updated document.\r\n    .then((${nameLowercase})=>{\r\n        if(!${nameLowercase}){\r\n            res.status(404).json({\r\n                resolved: \"success\",\r\n                message: \"${nameCaptialized} not found with id \" + req.params.${nameLowercase}Id,\r\n            });\r\n            return;\r\n        }\r\n        res.status(200).json({\r\n            resolved: \"success\",\r\n            message: \"${nameCaptialized} deleted successfully!\",\r\n            data: {\r\n                ${nameLowercase}: ${nameLowercase},\r\n            }\r\n        })\r\n    })\r\n    .catch((err)=>{\r\n        if(err.kind === 'ObjectId' || err.name === 'NotFound') {\r\n            res.status(404).json({\r\n                resolved: \"failure\",\r\n                message: \"${nameCaptialized} not found with id \" + req.params.${nameLowercase}Id,\r\n                error: err,\r\n            })\r\n            return;\r\n        }\r\n        res.status(500).json({\r\n            resolved: \"failure\",\r\n            message: \"Error deleting ${nameLowercase} with id \" + req.params.${nameLowercase}Id,\r\n            error: err, \r\n        });\r\n    });\r\n});\\n\r\n`\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.props.style} onClick={()=>{this.props.changeInView(4)}}>\r\n                <Title text={'Delete Endpoint'} getCopyButtonStyle={this.props.getCopyButtonStyle}  toCopy={['delete']} copyCallback={this.props.copyContent} />\r\n                <div style={this.props.getContentStyle(4)} >\r\n                    <div style={this.props.getSubEndpointStyle()}>\r\n                        <div style={this.props.getHeaderStyle()}>\r\n                            <div style={this.props.getEpNameStyle()}>Delete</div>\r\n                            <div style={this.props.getEpDescriptionStyle()}></div>\r\n                            <span style={this.props.getCopyButtonStyle()} onClick={()=>{this.props.copyContent(['delete'])}}>Copy</span>\r\n                        </div>\r\n                        <textarea wrap=\"off\" readOnly='readonly' value={this.getDeleteCode()} id='delete'></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeleteEp\r\n","import React, { Component } from 'react'\r\nimport SchemaCode from './SchemaCode'\r\nimport CreateEP from './CreateEP'\r\nimport ReadEp from './ReadEp'\r\nimport UpdateEp from './UpdateEp'\r\nimport DeleteEp from './DeleteEp'\r\nimport Title from './Title'\r\n\r\nexport class Output extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            inView: 0\r\n        }\r\n    }\r\n    \r\n    changeInView = (inView)=>{\r\n        this.setState({\r\n            inView\r\n        })\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            // border: '5px solid crimson',\r\n            height: '100%',\r\n            width: '35%',\r\n            position: 'relative',\r\n            // backgroundColor: '#2b3032',\r\n        }\r\n    }\r\n\r\n    getScrollableStyle = () => {\r\n        return {\r\n            // border: '5px solid purple',\r\n            position: 'absolute',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            overflow: 'auto',\r\n            padding: '10px',\r\n        }\r\n    }\r\n\r\n    getContentStyle = (index) => {\r\n        return {\r\n            padding: '5px',\r\n            display: this.state.inView===index ? 'block' : 'none',\r\n        }\r\n    }\r\n\r\n    getSubEndpointStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n        }\r\n    }\r\n\r\n    getHeaderStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            padding: '3px',\r\n        }\r\n    }\r\n\r\n    getEpNameStyle = () => {\r\n        return {\r\n            fontSize: '',\r\n            fontWeight: 600,\r\n        }\r\n    }\r\n\r\n    getEpDescriptionStyle = () => {\r\n        return {\r\n            fontSize: 'small',\r\n            fontWeight: 'bold',\r\n            color: 'lightgrey',\r\n            flexGrow: 1\r\n        }\r\n    }\r\n\r\n    getCopyButtonStyle = () => {\r\n        return {\r\n            backgroundColor: 'rgb(21,21,21)',\r\n            color: 'white',\r\n            fontSize: 'small',\r\n            padding: '5px',\r\n            cursor: 'pointer',\r\n            float: 'right'\r\n        }\r\n    }\r\n\r\n    capitalize = (string)=>{\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    copyContent = (elids) => {\r\n        let code='';\r\n        elids.forEach((elid,i)=>{\r\n            code += document.getElementById(elid).textContent; \r\n        });\r\n        const el = document.createElement('textarea');\r\n        el.value = code;\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.schema ? \r\n            <div style={this.getStyle()}>\r\n                <div style={this.getScrollableStyle()}>\r\n                    <SchemaCode \r\n                        schema={this.props.schema}  \r\n                        getContentStyle={this.getContentStyle} \r\n                        getSubEndpointStyle={this.getSubEndpointStyle} \r\n                        getHeaderStyle={this.getHeaderStyle}\r\n                        getEpNameStyle={this.getEpNameStyle}\r\n                        getEpDescriptionStyle={this.getEpDescriptionStyle}\r\n                        getCopyButtonStyle={this.getCopyButtonStyle}\r\n                        capitalize={this.capitalize}\r\n                        copyContent={this.copyContent}\r\n                        changeInView={this.changeInView}\r\n                        />\r\n                    <div>\r\n                    <Title text={'Endpoints'} fontSize={'x-large'} \r\n                        getCopyButtonStyle={this.getCopyButtonStyle} toCopy={['createone', 'findall', 'findbyid', 'update', 'delete']} copyCallback={this.copyContent}/>\r\n                    <CreateEP \r\n                        schema={this.props.schema}  \r\n                        getContentStyle={this.getContentStyle} \r\n                        getSubEndpointStyle={this.getSubEndpointStyle} \r\n                        getHeaderStyle={this.getHeaderStyle}\r\n                        getEpNameStyle={this.getEpNameStyle}\r\n                        getEpDescriptionStyle={this.getEpDescriptionStyle}\r\n                        getCopyButtonStyle={this.getCopyButtonStyle}\r\n                        capitalize={this.capitalize}\r\n                        copyContent={this.copyContent}\r\n                        changeInView={this.changeInView}\r\n                        copyCallback={this.copyContent} \r\n                        />\r\n                    <ReadEp \r\n                        schema={this.props.schema}  \r\n                        getContentStyle={this.getContentStyle} \r\n                        getSubEndpointStyle={this.getSubEndpointStyle} \r\n                        getHeaderStyle={this.getHeaderStyle}\r\n                        getEpNameStyle={this.getEpNameStyle}\r\n                        getEpDescriptionStyle={this.getEpDescriptionStyle}\r\n                        getCopyButtonStyle={this.getCopyButtonStyle}\r\n                        capitalize={this.capitalize}\r\n                        copyContent={this.copyContent}\r\n                        changeInView={this.changeInView}\r\n                        copyCallback={this.copyContent} \r\n                        />\r\n                    <UpdateEp \r\n                        schema={this.props.schema}  \r\n                        getContentStyle={this.getContentStyle} \r\n                        getSubEndpointStyle={this.getSubEndpointStyle} \r\n                        getHeaderStyle={this.getHeaderStyle}\r\n                        getEpNameStyle={this.getEpNameStyle}\r\n                        getEpDescriptionStyle={this.getEpDescriptionStyle}\r\n                        getCopyButtonStyle={this.getCopyButtonStyle}\r\n                        capitalize={this.capitalize}\r\n                        copyContent={this.copyContent}\r\n                        changeInView={this.changeInView}\r\n                        copyCallback={this.copyContent} \r\n                        />\r\n                    <DeleteEp \r\n                        schema={this.props.schema}  \r\n                        getContentStyle={this.getContentStyle} \r\n                        getSubEndpointStyle={this.getSubEndpointStyle} \r\n                        getHeaderStyle={this.getHeaderStyle}\r\n                        getEpNameStyle={this.getEpNameStyle}\r\n                        getEpDescriptionStyle={this.getEpDescriptionStyle}\r\n                        getCopyButtonStyle={this.getCopyButtonStyle}\r\n                        capitalize={this.capitalize}\r\n                        copyContent={this.copyContent}\r\n                        changeInView={this.changeInView}\r\n                        copyCallback={this.copyContent} \r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            :\r\n\r\n            ''\r\n        )\r\n    }\r\n}\r\n\r\nexport default Output\r\n","import React, { Component } from 'react'\r\nimport SideMenu from './SideMenu'\r\nimport Main from './Main'\r\nimport Output from './Output'\r\n\r\nexport class Body extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            selecetedSchema: -1,\r\n            allSchemas: [],\r\n            isMobile: window.innerWidth < 400,\r\n        }\r\n    }\r\n    \r\n    getStyle = () => {\r\n        return {\r\n            flexGrow: 1,\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n        }\r\n    }\r\n\r\n    createNewSchema = (schemaname) => {\r\n        const allSchemas = this.state.allSchemas;\r\n        allSchemas.push({name: schemaname, properties: []});\r\n        this.setState({\r\n            allSchemas: allSchemas,\r\n            selecetedSchema: allSchemas.length-1\r\n        });\r\n    }\r\n\r\n    selectSchema = (id) => {\r\n        // console.log(\"Selected Schema: \", this.state.allSchemas[id]);\r\n        this.setState({\r\n            selecetedSchema: id\r\n        })\r\n    }\r\n\r\n    deleteSchema = () => {\r\n        const allSchemas = this.state.allSchemas;\r\n        allSchemas.splice(this.state.selecetedSchema, 1);\r\n        this.setState({\r\n            selecetedSchema: this.state.selecetedSchema-1,\r\n            allSchemas\r\n        })\r\n    }\r\n\r\n    addNewProperty = (property) => {\r\n        const allSchemas = this.state.allSchemas;\r\n        allSchemas[this.state.selecetedSchema].properties.push(property);\r\n        this.setState({\r\n            allSchemas\r\n        })\r\n    }\r\n\r\n    deleteProperty = (index) => {\r\n        const allSchemas = this.state.allSchemas;\r\n        allSchemas[this.state.selecetedSchema].properties.splice(index, 1);\r\n        this.setState({\r\n            allSchemas\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <SideMenu allSchemas={this.state.allSchemas} selectedSchema={this.state.selecetedSchema} selectSchema={this.selectSchema} createNewSchema={this.createNewSchema}/>\r\n                <Main schema={this.state.allSchemas[this.state.selecetedSchema]} deleteSchema={this.deleteSchema} addNewProperty={this.addNewProperty} deleteProperty={this.deleteProperty} />\r\n                <Output schema={this.state.allSchemas[this.state.selecetedSchema]} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Body\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Body from './components/Body';\n\nexport class App extends Component {\n  getStyle = () => {\n    return {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n    }\n  }\n  render() {\n    return (\n      <div style={this.getStyle()}>\n        <Body />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}